{"version":3,"sources":["common/interfaces/auth/index.ts","common/interfaces/users/index.ts","common/interfaces/classes/index.ts","common/interfaces/classes/classroomUser.interface.ts","common/interfaces/index.ts","configs/drawer.config.tsx","pages/Dashboard/subcomponents/AddBtn/style.ts","pages/Dashboard/subcomponents/AddBtn/Disclaimer.tsx","pages/Dashboard/subcomponents/AddBtn/CreateForm.tsx","pages/Dashboard/subcomponents/AddBtn/JoinForm.tsx","pages/Dashboard/subcomponents/AddBtn/index.tsx","pages/Dashboard/subcomponents/ClassCard/style.tsx","pages/Dashboard/subcomponents/ClassCard/index.tsx","pages/Dashboard/style.ts","pages/Dashboard/service.ts","pages/Dashboard/index.tsx"],"names":["UserRole","drawerItemConfigs","title","icon","HomeOutlined","href","type","Event","children","RuleFolderOutlined","FactCheckOutlined","disclaimerStyle","checkboxContainer","display","flexDirection","p","bgcolor","my","justifyContent","formStyle","container","mb","Disclaimer","open","handleClose","onSubmit","React","useState","checkbox","setCheckbox","width","Box","sx","pt","Typography","variant","gutterBottom","component","Link","Checkbox","checked","onChange","event","target","Stack","direction","spacing","Button","onClick","disabled","validationSchema","yup","min","max","required","section","subject","room","CreateForm","formik","useFormik","initialValues","values","noValidate","autoComplete","handleSubmit","TextField","id","name","label","fullWidth","value","handleChange","error","touched","Boolean","errors","helperText","marginTop","code","matches","JoinForm","validateOnChange","pb","AddBtn","handleCreateClass","handleJoinClass","anchorEl","setAnchorEl","disclaimerModal","showDisclamer","createForm","showCreateForm","joinForm","showJoinForm","hideAll","IconButton","size","aria-label","aria-controls","aria-haspopup","currentTarget","color","fontSize","Menu","MenuListProps","anchorOrigin","vertical","horizontal","transformOrigin","onClose","keepMounted","MenuItem","form","data","cardSx","card","boxShadow","maxWidth","border","borderColor","borderRadius","header","flexWrap","whiteSpace","alignItems","cursor","textDecoration","textOverflow","overflow","header_title","header_section","actions","borderTop","ClassCard","image","Card","elevation","CardMedia","height","alt","CardContent","minHeight","CardActions","bodyContainer","px","cardContainer","gap","mt","ClassroomService","resource","Promise","resolve","reject","get","then","response","joinData","a","this","_repository","post","BaseApiService","service","Dashboard","navigate","useNavigate","dispatch","useAppDispatch","userData","useAuth","loading","setLoading","classes","setClasses","useEffect","getClassList","Fragment","items","toolbarComponents","LinearProgress","flexGrow","create","d","console","log","prv","joinClassRoom","role","STUDENT","showMessage","message","catch","err","fname","first_name","imageUrl","avatar","map","c","index","_id"],"mappings":"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","file":"static/js/7.9daa0a4b.chunk.js","sourcesContent":["export * from './auth.interface';\r\nexport * from './googleAuth.interface';\r\n","export * from './users.interface';\r\nexport * from './updateUser.interface';\r\n","export * from './classroom.interface';\r\nexport * from './invite.interface';\r\nexport * from './classroomUser.interface';\r\n","import { User } from './../users/users.interface';\r\nexport interface ClassroomUser {\r\n  user_id: User;\r\n  status: 'ACTIVATED' | 'INACTIVATED';\r\n  role: UserRole;\r\n  invite_code?: string;\r\n}\r\n\r\nexport enum UserRole {\r\n  TEACHER = 'TEACHER',\r\n  STUDENT = 'STUDENT',\r\n  ADMIN = 'ADMIN',\r\n}\r\n","export * from './auth';\r\nexport * from './users';\r\nexport * from './classes';\r\n","import { HomeOutlined, Event, RuleFolderOutlined, FactCheckOutlined } from '@mui/icons-material';\r\nimport { DrawerItemConfigType } from 'common/type';\r\nexport const drawerItemConfigs: DrawerItemConfigType[] = [\r\n  {\r\n    title: 'Classes',\r\n    icon: <HomeOutlined />,\r\n    href: '/',\r\n    type: 'item',\r\n  },\r\n  {\r\n    title: 'Calendar',\r\n    icon: <Event />,\r\n    href: '/',\r\n    type: 'item',\r\n  },\r\n  {\r\n    title: 'Teaching',\r\n    type: 'group',\r\n    children: [\r\n      {\r\n        title: 'To review',\r\n        icon: <RuleFolderOutlined />,\r\n        href: '/',\r\n        type: 'item',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Enrolled',\r\n    type: 'group',\r\n    children: [\r\n      {\r\n        title: 'To-do',\r\n        icon: <FactCheckOutlined />,\r\n        href: '/',\r\n        type: 'item',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { MultipleSxTypes } from 'common/type';\r\n\r\nexport const disclaimerStyle: MultipleSxTypes = {\r\n  checkboxContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    p: 1,\r\n    bgcolor: 'grey.100',\r\n    my: 2,\r\n    justifyContent: 'start',\r\n  },\r\n};\r\n\r\nexport const formStyle: MultipleSxTypes = {\r\n  container: {\r\n    '& .MuiTextField-root': {\r\n      my: 1,\r\n      mb: 2,\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Link, Typography, Box, Checkbox, Stack, Button } from '@mui/material';\r\nimport { SimpleDialog } from 'components';\r\nimport { disclaimerStyle } from './style';\r\nimport { DisclaimerProps } from './type';\r\n\r\nexport const Disclaimer = ({ open, handleClose, onSubmit }: DisclaimerProps) => {\r\n  const [checkbox, setCheckbox] = React.useState<boolean>(false);\r\n\r\n  const handleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCheckbox(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <SimpleDialog open={open} handleClose={handleClose} title=\"Using Classroom at a school with students?\" width={300}>\r\n      <Box sx={{ pt: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom component=\"p\" sx={{ pt: 1 }}>\r\n          If so, your school must sign up for a free Google Workspace for Education account before you can use Classroom.{' '}\r\n          <Link href=\"#\">privacy and security</Link>\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom component=\"p\" sx={{ pt: 1 }}>\r\n          Google Workspace for Education lets schools decide which Google services their students can use, and provides additional{' '}\r\n          <Link href=\"#\">privacy and security</Link> protections that are important in a school setting. Students cannot use Google Classroom at a school with\r\n          personal accounts.\r\n        </Typography>\r\n        <Box sx={disclaimerStyle.checkboxContainer}>\r\n          <div>\r\n            <Checkbox checked={checkbox} onChange={handleCheck} />\r\n          </div>\r\n          <Typography variant=\"body2\" gutterBottom component=\"p\" sx={{ pt: 1 }}>\r\n            I've read and understand the above notice, and I'm not using Classroom at a school with students\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\r\n          <Button onClick={handleClose}>Go back</Button>\r\n          <Button onClick={onSubmit} disabled={!checkbox}>\r\n            Continue\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    </SimpleDialog>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Box, Stack, Button, TextField } from '@mui/material';\r\nimport { SimpleDialog } from 'components';\r\nimport { formStyle } from './style';\r\nimport { FormModalProps } from './type';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup\r\n    .string()\r\n    .min(1, 'Classroom Title should be of 1-100 characters length')\r\n    .max(100, 'Classroom Title should be of 1-100 characters length')\r\n    .required('Classroom Title is required'),\r\n  section: yup\r\n    .string()\r\n    .min(1, 'Section should be of 1-50 characters length')\r\n    .max(50, 'Section should be of 1-50 characters length')\r\n    .required('Section is required'),\r\n  subject: yup\r\n    .string()\r\n    .min(1, 'Subject should be of 1-50 characters length')\r\n    .max(50, 'Subject should be of 1-50 characters length'),\r\n  room: yup\r\n    .string()\r\n    .min(1, 'Room should be of 1-50 characters length')\r\n    .max(50, 'Room should be of 1-50 characters length'),\r\n});\r\n\r\nexport const CreateForm = ({ open, handleClose, onSubmit }: FormModalProps) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      room: '',\r\n      section: '',\r\n      subject: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SimpleDialog open={open} handleClose={handleClose} title=\"Create class\" width={500}>\r\n      <Box component=\"form\" noValidate autoComplete=\"off\" sx={formStyle.container} onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          id=\"title\"\r\n          name=\"title\"\r\n          label=\"Class name (required)\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          value={formik.values.title}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.title && Boolean(formik.errors.title)}\r\n          helperText={formik.touched.title && formik.errors.title}\r\n        />\r\n        <TextField\r\n          id=\"section\"\r\n          name=\"section\"\r\n          label=\"Section (required)\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          onChange={formik.handleChange}\r\n          value={formik.values.section}\r\n          error={formik.touched.section && Boolean(formik.errors.section)}\r\n          helperText={formik.touched.section && formik.errors.section}\r\n        />\r\n        <TextField\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          label=\"Subject\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          onChange={formik.handleChange}\r\n          value={formik.values.subject}\r\n          error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n          helperText={formik.touched.subject && formik.errors.subject}\r\n        />\r\n        <TextField\r\n          id=\"room\"\r\n          name=\"room\"\r\n          label=\"Room\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          onChange={formik.handleChange}\r\n          value={formik.values.room}\r\n          error={formik.touched.room && Boolean(formik.errors.room)}\r\n          helperText={formik.touched.room && formik.errors.room}\r\n        />\r\n\r\n        <Stack direction=\"row\" spacing={2} marginTop={1} justifyContent=\"flex-end\">\r\n          <Button onClick={handleClose}>Go back</Button>\r\n          <Button type=\"submit\" onClick={() => {}}>\r\n            Continue\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    </SimpleDialog>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Typography, Box, Stack, Button, TextField } from '@mui/material';\r\nimport { SimpleDialog } from 'components';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { JoinFormProps } from './type';\r\nimport { formStyle } from './style';\r\n\r\nconst validationSchema = yup.object({\r\n  code: yup\r\n    .string()\r\n    .min(6, 'Classroom Title should be of 6 characters length')\r\n    .max(6, 'Classroom Title should be of 6 characters length')\r\n    .matches(/^[ A-Za-z0-9]*$/, 'Alphabetical or numeral characters only!')\r\n    .required('Classroom code is required'),\r\n});\r\n\r\nexport const JoinForm = ({ open, handleClose, onSubmit }: JoinFormProps) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n    },\r\n    validateOnChange: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n  return (\r\n    <SimpleDialog open={open} handleClose={handleClose} title=\"Join classroom by code\" width={300}>\r\n      <Box component=\"form\" noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit} sx={formStyle.container}>\r\n        <Typography variant=\"body2\" gutterBottom component=\"p\" sx={{ pb: 2 }}>\r\n          Ask your teacher for the class code, then enter it here.\r\n        </Typography>\r\n        <TextField\r\n          id=\"code\"\r\n          name=\"code\"\r\n          label=\"Class code (required)\"\r\n          fullWidth\r\n          value={formik.values.code}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.code && Boolean(formik.errors.code)}\r\n          helperText={formik.touched.code && formik.errors.code}\r\n        />\r\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\r\n          <Button onClick={handleClose}>Go back</Button>\r\n          <Button type=\"submit\">Continue</Button>\r\n        </Stack>\r\n      </Box>\r\n    </SimpleDialog>\r\n  );\r\n};\r\n","import { IconButton, Menu, MenuItem } from '@mui/material';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport React from 'react';\r\nimport { Disclaimer } from './Disclaimer';\r\nimport { CreateForm } from './CreateForm';\r\nimport { JoinForm } from './JoinForm';\r\nimport { AddBtnProps } from './type';\r\nimport { FormData } from '../../type';\r\n\r\nexport const AddBtn = ({ handleCreateClass, handleJoinClass }: AddBtnProps) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [disclaimerModal, showDisclamer] = React.useState<boolean>(false);\r\n  const [createForm, showCreateForm] = React.useState<boolean>(false);\r\n  const [joinForm, showJoinForm] = React.useState<boolean>(false);\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const hideAll = () => {\r\n    setAnchorEl(null);\r\n    showDisclamer(false);\r\n    showCreateForm(false);\r\n    showJoinForm(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n      >\r\n        <AddRoundedIcon sx={{ fontSize: 24 }} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-add\"\r\n        anchorEl={anchorEl}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'add-button',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        onClose={() => setAnchorEl(null)}\r\n        keepMounted\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            showJoinForm(true);\r\n          }}\r\n        >\r\n          Join class\r\n        </MenuItem>\r\n        <MenuItem onClick={() => showDisclamer(true)}>Create class</MenuItem>\r\n      </Menu>\r\n\r\n      {/* Disclaimer */}\r\n      <Disclaimer\r\n        open={disclaimerModal}\r\n        handleClose={hideAll}\r\n        onSubmit={() => {\r\n          hideAll();\r\n          showCreateForm(true);\r\n        }}\r\n      />\r\n\r\n      {/* Create Form */}\r\n      <CreateForm\r\n        open={createForm}\r\n        handleClose={hideAll}\r\n        onSubmit={(form: FormData) => {\r\n          handleCreateClass(form);\r\n          hideAll();\r\n        }}\r\n      />\r\n      <JoinForm\r\n        open={joinForm}\r\n        handleClose={hideAll}\r\n        onSubmit={(data: { code: string }) => {\r\n          handleJoinClass(data);\r\n          hideAll();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { MultipleSxTypes } from 'common/type';\r\n\r\nexport const cardSx: MultipleSxTypes = {\r\n  card: {\r\n    ':hover': {\r\n      boxShadow: '0 1px 2px 0 rgb(60 64 67 / 30%), 0 2px 6px 2px rgb(60 64 67 / 15%)',\r\n    },\r\n    maxWidth: 290,\r\n    border: 2,\r\n    borderColor: 'grey.200',\r\n    borderRadius: 2,\r\n  },\r\n  header: {\r\n    flexWrap: 'nowrap',\r\n    whiteSpace: 'nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'start',\r\n    marginTop: '-100px',\r\n    p: 2,\r\n    pb: 4,\r\n    color: '#fff',\r\n\r\n    '& > .MuiBox-root': {\r\n      cursor: 'pointer',\r\n      ':hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n\r\n      '& > .MuiBox-root': {\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n      },\r\n    },\r\n  },\r\n\r\n  header_title: {\r\n    fontSize: 22,\r\n  },\r\n\r\n  header_section: {\r\n    fontSize: 13,\r\n  },\r\n\r\n  actions: {\r\n    borderTop: 2,\r\n    borderColor: 'grey.200',\r\n    justifyContent: 'end',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Box, CardActions, IconButton, Stack, CardMedia, CardContent, Card } from '@mui/material';\r\nimport { cardSx } from './style';\r\n\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen';\r\nimport { ClassCardProps } from './type';\r\n\r\nexport const ClassCard = ({ image, title, section, onClick }: ClassCardProps) => {\r\n  return (\r\n    <Card sx={cardSx.card} elevation={0}>\r\n      <CardMedia component=\"img\" height=\"100\" image={image} alt=\"bg\" />\r\n      <Stack spacing={2} direction=\"row\" sx={cardSx.header}>\r\n        <Box width={200} onClick={onClick}>\r\n          <Box sx={cardSx.header_title} component=\"div\">\r\n            {title}\r\n          </Box>\r\n          <Box sx={cardSx.header_section} component=\"div\">\r\n            {section}\r\n          </Box>\r\n        </Box>\r\n\r\n        <IconButton>\r\n          <MoreVertIcon sx={{ color: '#fff' }} />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <CardContent sx={{ minHeight: 100 }}></CardContent>\r\n      <CardActions sx={cardSx.actions}>\r\n        <IconButton size=\"medium\" color=\"primary\">\r\n          <TrendingUpIcon />\r\n        </IconButton>\r\n        <IconButton size=\"medium\" color=\"primary\">\r\n          <FolderOpenIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n","import { SxType } from 'common/type';\r\n\r\nexport const bodyContainer: SxType = {\r\n  px: 2,\r\n};\r\n\r\nexport const cardContainer: SxType = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  justifyContent: 'start',\r\n  gap: 3,\r\n  mt: 3,\r\n};\r\n","import { Classroom, JoinClass } from 'common/interfaces';\r\nimport { GenericGetAllResponse } from './../../common/interfaces/response/generic.interface';\r\nimport { BaseApiService } from 'services';\r\nimport { FormData } from './type';\r\n\r\nclass ClassroomService extends BaseApiService<FormData, Classroom> {\r\n  resource = 'classes';\r\n\r\n  getClassList(): Promise<GenericGetAllResponse<Classroom>> {\r\n    return new Promise((resolve, reject) => {\r\n      this.get().then((response: any) => {\r\n        resolve(response);\r\n      });\r\n    });\r\n  }\r\n\r\n  async joinClassRoom(joinData: JoinClass) {\r\n    return (await this._repository.post(`${this.resource}/join`, joinData)).data;\r\n  }\r\n}\r\n\r\nexport default ClassroomService;\r\n","import { Box, Typography, LinearProgress } from '@mui/material';\r\nimport React from 'react';\r\nimport { Navbar, ProfileBtn, useAuth } from 'components';\r\nimport { drawerItemConfigs } from 'configs';\r\nimport { AddBtn, ClassCard } from './subcomponents';\r\nimport { bodyContainer, cardContainer } from './style';\r\nimport { FormData } from './type';\r\nimport ClassroomService from './service';\r\n// import { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { GenericGetAllResponse } from 'common/interfaces/response/generic.interface';\r\nimport { useNavigate } from 'react-router';\r\nimport { Classroom, UserRole } from 'common/interfaces';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { showMessage } from 'store/slices';\r\n\r\nconst service = new ClassroomService();\r\n\r\nconst Dashboard = () => {\r\n  // const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const { userData } = useAuth();\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [classes, setClasses] = React.useState<Classroom[]>([]); //TODO: REPLACE USING REDUX\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    service.getClassList().then((response: GenericGetAllResponse<Classroom>) => {\r\n      setClasses(response?.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleCreateClass = (form: FormData) => {\r\n    setLoading(true);\r\n    service.create(form).then((d) => {\r\n      console.log(d);\r\n      setLoading(false);\r\n      setClasses((prv) => [...prv, d]);\r\n    });\r\n  };\r\n\r\n  const handleJoinClass = (form: { code: string }) => {\r\n    setLoading(true);\r\n    service\r\n      .joinClassRoom({ code: form.code, role: UserRole.STUDENT })\r\n      .then((d) => {\r\n        console.log(d);\r\n        setLoading(false);\r\n        dispatch(showMessage({ message: 'Class enrolled with code = ' + form.code + '!' }));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(showMessage({ message: 'Failed to enroll!', type: 'error' }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar items={drawerItemConfigs} toolbarComponents={<>{loading && <LinearProgress />}</>}>\r\n        <>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            🎓 Moorssalc\r\n          </Typography>\r\n\r\n          <div>\r\n            <AddBtn handleCreateClass={handleCreateClass} handleJoinClass={handleJoinClass} />\r\n            {userData && <ProfileBtn fname={userData.first_name} imageUrl={userData.avatar} />}\r\n          </div>\r\n        </>\r\n      </Navbar>\r\n      {!loading && (\r\n        <Box sx={bodyContainer}>\r\n          <Box sx={cardContainer}>\r\n            {classes.map((c: Classroom, index: number) => (\r\n              <ClassCard\r\n                key={index}\r\n                title={c.title}\r\n                section={c.section}\r\n                image={c.image}\r\n                onClick={() => {\r\n                  navigate(`/classroom/${c._id}`);\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}