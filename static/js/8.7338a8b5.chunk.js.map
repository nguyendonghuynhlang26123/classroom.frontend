{"version":3,"sources":["common/interfaces/auth/index.ts","common/interfaces/users/index.ts","common/interfaces/classes/index.ts","common/interfaces/classes/classroomUser.interface.ts","common/interfaces/index.ts","pages/InvitationPage/service.ts","pages/InvitationPage/index.tsx"],"names":["UserRole","InvitationService","resource","classId","code","role","a","data","class_id","console","log","STUDENT","this","_repository","post","BaseApiService","InvitePage","dispatch","useAppDispatch","service","search","useLocation","navigate","useNavigate","React","useEffect","params","URLSearchParams","get","joinClassroom","then","catch","err","statusCode","showMessage","message","type","LinearProgress"],"mappings":"oKAAA,qK,yECAA,qK,yECAA,6N,yECQO,IAAKA,EAAZ,kC,SAAYA,K,kBAAAA,E,kBAAAA,E,eAAAA,M,uCCRZ,uP,+JCkBeC,E,4MAdbC,SAAW,U,0FAEX,WAAoBC,EAAiBC,EAAcC,GAAnD,eAAAC,EAAA,yDACQC,EAAkB,CACtBC,SAAUL,EACVC,KAAMA,EACNC,KAAMA,GAERI,QAAQC,IAAI,8EAA+EH,GACvFP,WAASW,UAAYN,EAP3B,gCAO+CO,KAAKC,YAAYC,KAAjB,UAAyBF,KAAKV,SAA9B,SAA+CK,GAP9F,uCAOqGA,MAPrG,wBAQqBK,KAAKC,YAAYC,KAAjB,UAAyBF,KAAKV,SAA9B,kBAAwDK,GAR7E,wCAQoFA,MARpF,iD,sEAH8BQ,G,OC6CjBC,UAxCI,WACjB,IAAMC,EAAWC,cACXC,EAAU,IAAIlB,EACZmB,EAAWC,cAAXD,OACFE,EAAWC,cA6BjB,OA5BAC,IAAMC,WAAU,WACd,GAAIL,EAAQ,CACVX,QAAQC,IAAI,6DAA8DU,GAC1E,IAAMM,EAAS,IAAIC,gBAAgBP,GAC7BjB,EAAUuB,EAAOE,IAAI,WACrBvB,EAAOqB,EAAOE,IAAI,QAClBxB,EAAOsB,EAAOE,IAAI,QACxBT,EACGU,cAAc1B,EAASC,EAAMC,GAC7ByB,MAAK,SAACvB,GACLe,EAAS,cAAgBnB,MAE1B4B,OAAM,SAACC,GACiB,MAAnBA,EAAIC,YACNhB,EACEiB,YAAY,CACVC,QACE,qHACFC,KAAM,mBAOXd,EAAS,OACf,IAGD,qCACE,cAACe,EAAA,EAAD,IADF","file":"static/js/8.7338a8b5.chunk.js","sourcesContent":["export * from './auth.interface';\r\nexport * from './googleAuth.interface';\r\n","export * from './users.interface';\r\nexport * from './updateUser.interface';\r\n","export * from './classroom.interface';\r\nexport * from './invite.interface';\r\nexport * from './classroomUser.interface';\r\n","import { User } from './../users/users.interface';\r\nexport interface ClassroomUser {\r\n  user_id: User;\r\n  status: 'ACTIVATED' | 'INACTIVATED';\r\n  role: UserRole;\r\n  invite_code?: string;\r\n}\r\n\r\nexport enum UserRole {\r\n  TEACHER = 'TEACHER',\r\n  STUDENT = 'STUDENT',\r\n  ADMIN = 'ADMIN',\r\n}\r\n","export * from './auth';\r\nexport * from './users';\r\nexport * from './classes';\r\n","import { JoinClass, UserRole } from 'common/interfaces';\r\nimport { BaseApiService } from 'services';\r\n\r\nclass InvitationService extends BaseApiService<JoinClass, any> {\r\n  resource = 'classes';\r\n\r\n  async joinClassroom(classId: string, code: string, role: UserRole): Promise<any> {\r\n    const data: JoinClass = {\r\n      class_id: classId,\r\n      code: code,\r\n      role: role,\r\n    };\r\n    console.log('log ~ file: service.ts ~ line 13 ~ InvitationService ~ joinClassroom ~ data', data);\r\n    if (UserRole.STUDENT === role) return (await this._repository.post(`${this.resource}/join`, data)).data;\r\n    else return (await this._repository.post(`${this.resource}/invite/accept`, data)).data;\r\n  }\r\n}\r\n\r\nexport default InvitationService;\r\n","import { LinearProgress } from '@mui/material';\r\nimport { UserRole } from 'common/interfaces';\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { showMessage } from 'store/slices';\r\nimport InvitationService from './service';\r\n\r\nconst InvitePage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const service = new InvitationService();\r\n  const { search } = useLocation();\r\n  const navigate = useNavigate();\r\n  React.useEffect(() => {\r\n    if (search) {\r\n      console.log('log ~ file: index.tsx ~ line 14 ~ React.useEffect ~ search', search);\r\n      const params = new URLSearchParams(search);\r\n      const classId = params.get('classId') as string;\r\n      const role = params.get('role') as UserRole;\r\n      const code = params.get('code') as string;\r\n      service\r\n        .joinClassroom(classId, code, role)\r\n        .then((data) => {\r\n          navigate('/classroom/' + classId);\r\n        })\r\n        .catch((err) => {\r\n          if (err.statusCode === 409) {\r\n            dispatch(\r\n              showMessage({\r\n                message:\r\n                  'Invited email and your account email is not the same! Please login with the Email you received the invitation code',\r\n                type: 'error',\r\n              }),\r\n            );\r\n          }\r\n\r\n          // navigate('/not-found');\r\n        });\r\n    } else navigate('/');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <LinearProgress />; Please wait a few moment\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvitePage;\r\n"],"sourceRoot":""}