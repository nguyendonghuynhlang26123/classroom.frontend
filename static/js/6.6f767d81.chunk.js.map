{"version":3,"sources":["common/interfaces/auth/index.ts","common/interfaces/users/index.ts","common/interfaces/classes/index.ts","common/interfaces/classes/classroomUser.interface.ts","common/interfaces/index.ts","configs/drawer.config.tsx","pages/Classroom/service.ts","pages/Classroom/subcomponents/People/style.ts","pages/Classroom/subcomponents/People/InviteForm.tsx","pages/Classroom/subcomponents/People/index.tsx","pages/Classroom/subcomponents/Stream/style.ts","pages/Classroom/subcomponents/Stream/index.tsx","pages/Classroom/subcomponents/Classwork/index.tsx","pages/Classroom/subcomponents/ClassroomSetting/style.ts","pages/Classroom/subcomponents/ClassroomSetting/index.tsx","pages/Classroom/style.ts","pages/Classroom/index.tsx"],"names":["UserRole","drawerItemConfigs","title","icon","HomeOutlined","href","type","Event","children","RuleFolderOutlined","FactCheckOutlined","ClassroomService","resource","classId","a","this","_repository","get","data","users","post","role","getOne","myRole","BaseApiService","peopleTabSx","root","width","header","py","mt","px","borderBottom","borderColor","color","fontSize","validationSchema","yup","email","required","InviteForm","open","handleClose","onSubmit","formik","useFormik","initialValues","validateOnChange","values","Box","component","noValidate","autoComplete","handleSubmit","Typography","variant","gutterBottom","TextField","id","name","label","fullWidth","sx","mb","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Stack","direction","spacing","justifyContent","Button","onClick","PeopleTab","useParams","service","dispatch","useAppDispatch","React","useState","setData","inviteTeacher","showTeacherInviteForm","inviteStudent","showStudentInviteForm","fetchData","getClassUsers","then","useEffect","console","log","submitInvite","invitedRole","submitInvitation","class_id","d","showMessage","message","catch","err","Container","maxWidth","map","t","Fragment","STUDENT","IconButton","PersonAddOutlined","List","filter","u","checkRole","status","idx","ListItem","alignItems","ListItemAvatar","user_id","avatar","Avatar","alt","first_name","src","bgcolor","charAt","ListItemText","primary","last_name","secondary","display","Tooltip","Mail","Divider","TEACHER","bannerSx","card_stack","whiteSpace","mx","my","card","borderRadius","xs","md","p","textOverflow","overflow","header_title","fontWeight","header_section","content","expand_row","gap","StreamTab","classData","details","showDetails","minHeight","Card","elevation","CardMedia","height","image","section","prvState","Info","InfoOutlined","Collapse","in","CardContent","code","subject","room","ClassworkTab","settingModalSx","toolbar","ml","textTransform","container","form","border","min","max","ClassroomSetting","modal","showModal","validateOnBlur","size","aria-label","aria-controls","aria-haspopup","Modal","onClose","aria-labelledby","aria-describedby","Grow","timeout","Toolbar","edge","navSx","tabsContainer","flexGrow","transition","link","progressBar","mainSx","ClassroomBoard","navigate","useNavigate","classService","userData","useAuth","loading","setLoading","tabValue","setTabValue","setClassData","setMyRole","getClassData","items","toolbarComponents","Tabs","event","newValue","Tab","LinearProgress","Link","underline","fname","imageUrl","index"],"mappings":"oKAAA,qK,yECAA,qK,yECAA,6N,yECQO,IAAKA,EAAZ,kC,SAAYA,K,kBAAAA,E,kBAAAA,E,eAAAA,M,uCCRZ,uP,kHCEaC,EAA4C,CACvD,CACEC,MAAO,UACPC,KAAM,cAACC,EAAA,EAAD,IACNC,KAAM,IACNC,KAAM,QAER,CACEJ,MAAO,WACPC,KAAM,cAACI,EAAA,EAAD,IACNF,KAAM,IACNC,KAAM,QAER,CACEJ,MAAO,WACPI,KAAM,QACNE,SAAU,CACR,CACEN,MAAO,YACPC,KAAM,cAACM,EAAA,EAAD,IACNJ,KAAM,IACNC,KAAM,UAIZ,CACEJ,MAAO,WACPI,KAAM,QACNE,SAAU,CACR,CACEN,MAAO,QACPC,KAAM,cAACO,EAAA,EAAD,IACNL,KAAM,IACNC,KAAM,Y,wTCRCK,E,4MAtBbC,SAAW,U,sFAEX,WAAgBC,GAAhB,SAAAC,EAAA,sEACgBC,KAAKC,YAAYC,IAAjB,UAAwBF,KAAKH,SAA7B,YAAyCC,EAAzC,UADhB,uCAC0EK,MAD1E,gD,yHAIA,WAAoBL,GAApB,SAAAC,EAAA,sEACgBC,KAAKC,YAAYC,IAAjB,UAAwBF,KAAKH,SAA7B,YAAyCC,EAAzC,YADhB,uCAC4EK,KAAKC,OADjF,gD,4HAIA,WAAuBD,GAAvB,SAAAJ,EAAA,sEACgBC,KAAKC,YAAYI,KAAjB,UAAyBL,KAAKH,SAA9B,WAAiDM,GADjE,uCACwEA,MADxE,gD,wHAIA,WAAmBL,GAAnB,SAAAC,EAAA,sEAEmBC,KAAKC,YAAYC,IAAjB,UAAwBF,KAAKH,SAA7B,YAAyCC,EAAzC,UAFnB,0BAE6EK,KAAKG,KAFlF,SAGgBN,KAAKO,OAAOT,GAH5B,6CAEIU,OAFJ,KAGIL,KAHJ,uD,kEAf6BM,GCFlBC,EAA+B,CAC1CC,KAAM,CACJC,MAAO,SAGTC,OAAQ,CACNC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,aAAc,EACdC,YAAa,eACb,wBAAyB,CACvBC,MAAO,eACPC,SAAU,IAEZ,wBAAyB,CACvBD,MAAO,eACPP,MAAO,M,mDCZPS,EAAmBC,IAAW,CAClCC,MAAOD,MAAaC,QAAQC,SAAS,uBAG1BC,EAAa,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMvC,EAAoD,EAApDA,MAAOwC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAC/CC,EAASC,YAAU,CACvBC,cAAe,CACbR,MAAO,IAETS,kBAAkB,EAClBX,iBAAkBA,EAClBO,SAAU,SAACK,GACTL,EAASK,EAAOV,UAIpB,OACE,cAAC,IAAD,CAAcG,KAAMA,EAAMC,YAAaA,EAAaxC,MAAOA,EAAOyB,MAAO,IAAzE,SACE,eAACsB,EAAA,EAAD,CAAKC,UAAU,OAAOC,YAAU,EAACC,aAAa,MAAMT,SAAUC,EAAOS,aAArE,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAACN,UAAU,IAAnD,mDAGA,cAACO,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,cACNL,QAAQ,WACRM,WAAS,EACTC,GAAI,CAAEhC,GAAI,EAAGiC,GAAI,GACjBC,MAAOpB,EAAOI,OAAOV,MACrB2B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQ9B,OAAS+B,QAAQzB,EAAO0B,OAAOhC,OACrDiC,WAAY3B,EAAOwB,QAAQ9B,OAASM,EAAO0B,OAAOhC,QAEpD,eAACkC,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGC,eAAe,WAAlD,UACE,cAACC,EAAA,EAAD,CAAQC,QAASnC,EAAjB,oBACA,cAACkC,EAAA,EAAD,CAAQtE,KAAK,SAAb,6B,gBCnBGwE,EAAY,SAAC,GAA8B,IAA5BzD,EAA2B,EAA3BA,KAClBqC,EAAOqB,cAAPrB,GACFsB,EAAU,IAAIrE,EACdsE,EAAWC,cAHoC,EAI7BC,IAAMC,SAA0B,IAJH,mBAI9ClE,EAJ8C,KAIxCmE,EAJwC,OAKNF,IAAMC,UAAkB,GALlB,mBAK9CE,EAL8C,KAK/BC,EAL+B,OAMNJ,IAAMC,UAAkB,GANlB,mBAM9CI,EAN8C,KAM/BC,EAN+B,KAQ/CC,EAAY,SAAC7E,GACjBmE,EAAQW,cAAc9E,GAAS+E,MAAK,SAACzE,GACnCkE,EAAQlE,OAIZgE,IAAMU,WAAU,WACVnC,IACFoC,QAAQC,IAAI,mDAAoDrC,GAChEgC,EAAUhC,MAEX,IAEH,IAWMsC,EAAe,SAACC,EAAuB3D,GAC3C0C,EACGkB,iBAAiB,CAChBC,SAAUzC,EACVrC,KAAM4E,EACN3D,MAAOA,IAERsD,MAAK,SAACQ,GACLN,QAAQC,IAAIK,GACR1C,GAAIgC,EAAUhC,GAClBuB,EAASoB,YAAY,CAAEC,QAAS,wBAEjCC,OAAM,SAACC,GACNV,QAAQC,IAAI,gDAAiDS,GAC7DvB,EAASoB,YAAY,CAAEC,QAAS,4CAA8CE,EAAIF,QAAShG,KAAM,eAIvG,OACE,eAACmG,EAAA,EAAD,CAAWC,UAAU,EAAO5C,GAAIrC,EAAYC,KAA5C,UACG,CAAC,WAAY,YAAYiF,KAAI,SAACC,GAAD,OAC5B,eAAC,IAAMC,SAAP,WACE,eAACrC,EAAA,EAAD,CAAOC,UAAU,MAAME,eAAe,gBAAgBb,GAAIrC,EAAYG,OAAtE,UACE,cAAC0B,EAAA,EAAD,UAAasD,IACZvF,IAASrB,WAAS8G,SACjB,cAACC,EAAA,EAAD,CACElC,QAAS,WAhCE,IAACvE,IAiCOsG,EAhC/Bd,QAAQC,IAAI,4DAA6DzF,GAC5D,aAATA,EAAqBiF,GAAsB,GAC1CE,GAAsB,IA4BjB,SAKE,cAACuB,EAAA,EAAD,SAIN,cAACC,EAAA,EAAD,UACG/F,GACCA,EACGgG,QACC,SAACC,GAAD,OAjDE,SAAC9F,EAAgBf,GACjC,MAAa,aAATA,EAA4Be,IAASrB,WAAS8G,QACtCzF,IAASrB,WAAS8G,QAgDdM,CAAUD,EAAE9F,KAAMuF,KAAOvF,IAASrB,WAAS8G,SAAwB,gBAAbK,EAAEE,WAE3DV,KAAI,SAACQ,EAAkBG,GAAnB,OACH,eAAC,IAAMT,SAAP,WACE,eAACU,EAAA,EAAD,CAAUC,WAAW,aAArB,UACE,cAACC,EAAA,EAAD,UACGN,EAAEO,QAAQC,OACT,cAACC,EAAA,EAAD,CAAQC,IAAKV,EAAEO,QAAQI,WAAYC,IAAKZ,EAAEO,QAAQC,OAAQ7D,GAAI,CAAEkE,QAAS,kBAEzE,cAACJ,EAAA,EAAD,CAAQ9D,GAAI,CAAEkE,QAAS,gBAAvB,SAA0Cb,EAAEO,QAAQI,WAAWG,OAAO,OAG1E,cAACC,EAAA,EAAD,CACEC,QAAShB,EAAEO,QAAQI,WAAa,IAAMX,EAAEO,QAAQU,UAChDC,UACE,qCACE,cAAC/E,EAAA,EAAD,CACEQ,GAAI,CAAEwE,QAAS,UACfpF,UAAU,OACVK,QAAQ,QACRrB,MAAM,eAJR,SAMGiF,EAAEO,QAAQpF,QAEC,gBAAb6E,EAAEE,QAA4B,qBAIrC,cAACkB,EAAA,EAAD,CAASrI,MAAK,uBAAkBiH,EAAEO,QAAQpF,OAA1C,SACE,cAACyE,EAAA,EAAD,CAAY1G,KAAI,iBAAY8G,EAAEO,QAAQpF,OAAtC,SACE,cAACkG,EAAA,EAAD,WAIN,cAACC,EAAA,EAAD,MA/BmBnB,UArBVV,MA2DvB,cAAC,EAAD,CACE1G,MAAM,kBACNuC,KAAM6C,EACN5C,YAAa,kBAAM6C,GAAsB,IACzC5C,SAAU,SAACL,GACT0D,EAAahG,WAAS0I,QAASpG,GAC/BiD,GAAsB,MAI1B,cAAC,EAAD,CACErF,MAAM,kBACNuC,KAAM+C,EACN9C,YAAa,kBAAM+C,GAAsB,IACzC9C,SAAU,SAACL,GACT0D,EAAahG,WAAS8G,QAASxE,GAC/BmD,GAAsB,U,sDCtJnBkD,EAA4B,CACvCC,WAAY,CACV9G,GAAI,QACJ+G,WAAY,SACZlE,eAAgB,gBAChB6C,WAAY,MACZ,wBAAyB,CACvBsB,GAAI,EACJC,GAAI,GACJ7G,MAAO,SAGX8G,KAAM,CACJC,aAAc,GAEhBrH,OAAQ,CACNM,MAAO,OACPP,MAAO,CACLuH,GAAI,MACJC,GAAI,OAENC,EAAG,EACH,iBAAkB,CAChBC,aAAc,WACdC,SAAU,WAGdC,aAAc,CACZpH,SAAU,GACVqH,WAAY,KAEdC,eAAgB,CACdtH,SAAU,IAEZuH,QAAS,CACPN,EAAG,GAELO,WAAY,CACVC,IAAK,EACL,sCAAuC,CACrCJ,WAAY,OCnCLK,GAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWzI,EAAwB,EAAxBA,KAAwB,EAC9B8D,IAAMC,UAAkB,GADM,mBACtD2E,EADsD,KAC7CC,EAD6C,KAO7D,OACE,cAAC/G,EAAA,EAAD,CAAKgH,UAAU,QAAf,SAEE,eAACC,EAAA,EAAD,CAAMpG,GAAI6E,EAASK,KAAMmB,UAAWJ,EAAU,EAAI,EAAlD,UACE,cAACK,EAAA,EAAD,CAAWlH,UAAU,MAAMmH,OAAO,MAAMC,MAAOR,EAAUQ,MAAOzC,IAAI,OACpE,eAACrD,EAAA,EAAD,CAAOE,QAAS,EAAGD,UAAU,MAAMX,GAAI6E,EAASC,WAAhD,UACE,eAAC3F,EAAA,EAAD,CAAKa,GAAI6E,EAAS/G,OAAlB,UACE,cAACqB,EAAA,EAAD,CAAKa,GAAI6E,EAASY,aAAlB,SAAiCO,EAAU5J,QAC3C,cAAC+C,EAAA,EAAD,CAAKa,GAAI6E,EAASc,eAAlB,SAAmCK,EAAUS,aAG/C,cAACxD,EAAA,EAAD,CAAYlC,QAfM,WACxBmF,GAAY,SAACQ,GAAD,OAAeA,MAcrB,SAAyCT,EAAU,cAACU,EAAA,EAAD,IAAW,cAACC,EAAA,EAAD,SAGhE,cAACC,EAAA,EAAD,CAAUC,GAAIb,EAAd,SACE,eAACc,EAAA,EAAD,CAAa/G,GAAI6E,EAASe,QAA1B,UACGrI,IAASrB,WAAS8G,SACjB,eAACtC,EAAA,EAAD,CAAOC,UAAU,MAAMX,GAAI6E,EAASgB,WAApC,UACE,cAACrG,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BuG,EAAUgB,WAGjC,OAAThB,QAAS,IAATA,OAAA,EAAAA,EAAWiB,UACV,eAACvG,EAAA,EAAD,CAAOC,UAAU,MAAMX,GAAI6E,EAASgB,WAApC,UACE,cAACrG,EAAA,EAAD,CAAYC,QAAQ,QAApB,qBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BuG,EAAUiB,cAGjC,OAATjB,QAAS,IAATA,OAAA,EAAAA,EAAWkB,OACV,eAACxG,EAAA,EAAD,CAAOC,UAAU,MAAMX,GAAI6E,EAASgB,WAApC,UACE,cAACrG,EAAA,EAAD,CAAYC,QAAQ,QAApB,kBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BuG,EAAUkB,qBC3C1CC,GAAe,WAC1B,OAAO,iD,UCDIC,GAAkC,CAC7CxJ,KAAM,CACJC,MAAO,QACP0I,OAAQ,QACRrC,QAAS,oBAGXmD,QAAS,CACPnJ,aAAc,EACdC,YAAa,UACb,wBAAyB,CACvBuH,WAAY,KAEd,oBAAqB,CACnB4B,GAAI,OACJC,cAAe,eAInBC,UAAW,CACT5E,SAAU,SAGZ6E,KAAM,CACJzJ,GAAI,EACJsH,EAAG,EACHoC,OAAQ,EACRvJ,YAAa,UACbgH,aAAc,EACd,wBAAyB,CACvB9G,SAAU,OACV4B,GAAI,GAEN,uBAAwB,CACtBgF,GAAI,K,wEC5BJ3G,GAAmBC,IAAW,CAClCnC,MAAOmC,MAEJoJ,IAAI,EAAG,wDACPC,IAAI,IAAK,wDACTnJ,SAAS,+BACZgI,QAASlI,MAENoJ,IAAI,EAAG,+CACPC,IAAI,GAAI,+CACXX,QAAS1I,MAENoJ,IAAI,EAAG,+CACPC,IAAI,GAAI,+CACXV,KAAM3I,MAEHoJ,IAAI,EAAG,4CACPC,IAAI,GAAI,8CAEAC,GAAmB,SAAC,GAAQ,sBACZxG,IAAMC,UAAkB,GADb,mBAC/BwG,EAD+B,KACxBC,EADwB,KAEhCjJ,EAASC,YAAU,CACvBC,cAAe,CACb5C,MAAO,GACP8K,KAAM,GACNT,QAAS,GACTQ,QAAS,IAEXe,gBAAgB,EAChB1J,iBAAkBA,GAClBO,SAAU,SAACK,GACT8C,QAAQC,IAAI,8DAA+D/C,MAI/E,OACE,qCACE,cAAC+D,EAAA,EAAD,CACEgF,KAAK,QACLC,aAAW,0BACXC,gBAAc,cACdC,gBAAc,OACdrH,QAAS,kBAAMgH,GAAU,IACzB3J,MAAM,UANR,SAQE,cAAC,KAAD,CAAc4B,GAAI,CAAE3B,SAAU,QAGhC,cAACgK,GAAA,EAAD,CACE1J,KAAMmJ,EACNQ,QAAS,kBAAMP,GAAU,IACzBQ,kBAAgB,oBAChBC,mBAAiB,0BAJnB,SAME,cAACC,GAAA,EAAD,CAAM3B,GAAIgB,EAAOY,QAAS,IAA1B,SACE,eAACvJ,EAAA,EAAD,CAAKa,GAAIoH,GAAexJ,KAAxB,UACE,eAAC+K,GAAA,EAAD,CAAS3I,GAAIoH,GAAeC,QAA5B,UACE,cAACpE,EAAA,EAAD,CACEgF,KAAK,QACLW,KAAK,QACLxK,MAAM,UACN8J,aAAW,cACXnH,QAAS,kBAAMgH,GAAU,IAL3B,SAOE,cAAC,KAAD,CAAW/H,GAAI,CAAE3B,SAAU,QAE7B,cAACmB,EAAA,EAAD,CAAYC,QAAQ,QAApB,+BAEA,cAACqB,EAAA,EAAD,CAAQrB,QAAQ,YAAhB,qBAGF,cAACkD,EAAA,EAAD,CAAWC,UAAU,EAAO5C,GAAIoH,GAAeI,UAA/C,SACE,eAACrI,EAAA,EAAD,CACEa,GAAIoH,GAAeK,KACnBrI,UAAU,OACVC,YAAU,EACVC,aAAa,MACbT,SAAUC,EAAOS,aALnB,UAOE,cAACC,EAAA,EAAD,CAAYpB,MAAM,UAAlB,2BACA,cAACuB,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,wBACNL,QAAQ,SACRM,WAAS,EACTG,MAAOpB,EAAOI,OAAO9C,MACrB+D,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQlE,OAASmE,QAAQzB,EAAO0B,OAAOpE,OACrDqE,WAAY3B,EAAOwB,QAAQlE,OAAS0C,EAAO0B,OAAOpE,QAEpD,cAACuD,EAAA,EAAD,CACEC,GAAG,UACHC,KAAK,UACLC,MAAM,UACNL,QAAQ,SACRM,WAAS,EACTI,SAAUrB,EAAOsB,aACjBF,MAAOpB,EAAOI,OAAOuH,QACrBpG,MAAOvB,EAAOwB,QAAQmG,SAAWlG,QAAQzB,EAAO0B,OAAOiG,SACvDhG,WAAY3B,EAAOwB,QAAQmG,SAAW3H,EAAO0B,OAAOiG,UAEtD,cAAC9G,EAAA,EAAD,CACEC,GAAG,UACHC,KAAK,UACLC,MAAM,UACNL,QAAQ,SACRM,WAAS,EACTI,SAAUrB,EAAOsB,aACjBF,MAAOpB,EAAOI,OAAO+H,QACrB5G,MAAOvB,EAAOwB,QAAQ2G,SAAW1G,QAAQzB,EAAO0B,OAAOyG,SACvDxG,WAAY3B,EAAOwB,QAAQ2G,SAAWnI,EAAO0B,OAAOyG,UAEtD,cAACtH,EAAA,EAAD,CACEC,GAAG,OACHC,KAAK,OACLC,MAAM,OACNL,QAAQ,SACRM,WAAS,EACTI,SAAUrB,EAAOsB,aACjBF,MAAOpB,EAAOI,OAAOgI,KACrB7G,MAAOvB,EAAOwB,QAAQ4G,MAAQ3G,QAAQzB,EAAO0B,OAAO0G,MACpDzG,WAAY3B,EAAOwB,QAAQ4G,MAAQpI,EAAO0B,OAAO0G,uBChItD2B,GAAyB,CACpCC,cAAe,CACb5K,aAAc,EACdC,YAAa,UACb4K,SAAU,EACVvE,QAAS,OACT3D,eAAgB,SAChB7C,GAAI,CACFoH,GAAI,EACJC,IAAK,GAEPpF,GAAI,OACJ,iBAAkB,CAChBsG,OAAQ,GACR1F,eAAgB,SAChB6C,WAAY,SACZ6D,cAAe,aACf7B,WAAY,WACZrH,SAAU,GACVJ,GAAI,EACJ+K,WAAY,qCACZ,SAAU,CACR9E,QAAS,cAIf+E,KAAM,CACJ7K,MAAO,eACPD,YAAa,WAEf+K,YAAa,CACXlL,GAAI,SAIKmL,GAA0B,CACrC3B,UAAW,CACTxJ,GAAI,EACJsH,EAAG,eACH1C,SAAU,WCiDCwG,UA7EQ,WAAO,IACpBxJ,EAAOqB,cAAPrB,GACFyJ,EAAWC,cACXnI,EAAWC,cACXmI,EAAe,IAAI1M,EACjB2M,EAAaC,cAAbD,SALmB,EAMGnI,IAAMC,UAAkB,GAN3B,mBAMpBoI,EANoB,KAMXC,EANW,OAOKtI,IAAMC,SAAiB,GAP5B,mBAOpBsI,EAPoB,KAOVC,EAPU,OAQOxI,IAAMC,SAA2B,MARxC,mBAQpB0E,EARoB,KAQT8D,EARS,OASDzI,IAAMC,SAAmBpF,WAAS8G,SATjC,mBASpBzF,EAToB,KASdwM,EATc,KAgC3B,OAjBA1I,IAAMU,WAAU,WACVnC,GACF2J,EACGS,aAAapK,GACbkC,MAAK,YAAuB,IAApB1E,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,OACbqM,EAAa1M,GACb2M,EAAUtM,GACVkM,GAAW,MAEZlH,OAAM,SAACC,GACNvB,EAASoB,YAAY,CAAEC,QAAS,oBAAqBhG,KAAM,WAC3DmN,GAAW,GACXN,EAAS,mBAGd,IAGD,eAAC,IAAMtG,SAAP,WACE,eAAC,IAAD,CACEkH,MAAO9N,IACP+N,kBACE,qCACE,cAAC/K,EAAA,EAAD,CAAKa,GAAI6I,GAAMC,cAAf,SACE,eAACqB,EAAA,EAAD,CAAMjK,MAAO0J,EAAUzJ,SA5Bd,SAACiK,EAA6BC,GACjDR,EAAYQ,IA2B6CnC,aAAW,qBAA1D,UACE,cAACoC,EAAA,EAAD,CAAKxK,MAAM,SAASF,GAAG,QACvB,cAAC0K,EAAA,EAAD,CAAKxK,MAAM,YAAYF,GAAG,QAC1B,cAAC0K,EAAA,EAAD,CAAKxK,MAAM,SAASF,GAAG,eAG1B8J,GAAW,cAACa,EAAA,EAAD,CAAgBvK,GAAI6I,GAAMK,iBAX5C,UAeE,cAAC1J,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAU,MAAMY,GAAI,CAAE+I,SAAU,GAAzD,SACE,cAACyB,EAAA,EAAD,CAAMC,UAAU,QAAQlO,KAAM,IAAKyD,GAAI6I,GAAMI,KAA7C,SACGjD,GAAaA,EAAU5J,UAI5B,eAAC+C,EAAA,EAAD,WACE,cAAC,GAAD,IACCqK,GAAY,cAAC,IAAD,CAAYkB,MAAOlB,EAASxF,WAAY2G,SAAUnB,EAAS3F,gBAG1E6F,GAAW1D,GAAazI,GACxB,eAACoF,EAAA,EAAD,CAAWC,UAAU,EAAO5C,GAAImJ,GAAO3B,UAAvC,UACE,cAAC,IAAD,CAAUtH,MAAO0J,EAAUgB,MAAO,EAAlC,SACE,cAAC,GAAD,CAAWrN,KAAMA,EAAMyI,UAAWA,MAEpC,cAAC,IAAD,CAAU9F,MAAO0J,EAAUgB,MAAO,EAAlC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAU1K,MAAO0J,EAAUgB,MAAO,EAAlC,SACE,cAAC,EAAD,CAAWrN,KAAMA","file":"static/js/6.6f767d81.chunk.js","sourcesContent":["export * from './auth.interface';\r\nexport * from './googleAuth.interface';\r\n","export * from './users.interface';\r\nexport * from './updateUser.interface';\r\n","export * from './classroom.interface';\r\nexport * from './invite.interface';\r\nexport * from './classroomUser.interface';\r\n","import { User } from './../users/users.interface';\r\nexport interface ClassroomUser {\r\n  user_id: User;\r\n  status: 'ACTIVATED' | 'INACTIVATED';\r\n  role: UserRole;\r\n  invite_code?: string;\r\n}\r\n\r\nexport enum UserRole {\r\n  TEACHER = 'TEACHER',\r\n  STUDENT = 'STUDENT',\r\n  ADMIN = 'ADMIN',\r\n}\r\n","export * from './auth';\r\nexport * from './users';\r\nexport * from './classes';\r\n","import { HomeOutlined, Event, RuleFolderOutlined, FactCheckOutlined } from '@mui/icons-material';\r\nimport { DrawerItemConfigType } from 'common/type';\r\nexport const drawerItemConfigs: DrawerItemConfigType[] = [\r\n  {\r\n    title: 'Classes',\r\n    icon: <HomeOutlined />,\r\n    href: '/',\r\n    type: 'item',\r\n  },\r\n  {\r\n    title: 'Calendar',\r\n    icon: <Event />,\r\n    href: '/',\r\n    type: 'item',\r\n  },\r\n  {\r\n    title: 'Teaching',\r\n    type: 'group',\r\n    children: [\r\n      {\r\n        title: 'To review',\r\n        icon: <RuleFolderOutlined />,\r\n        href: '/',\r\n        type: 'item',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Enrolled',\r\n    type: 'group',\r\n    children: [\r\n      {\r\n        title: 'To-do',\r\n        icon: <FactCheckOutlined />,\r\n        href: '/',\r\n        type: 'item',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { UserRole } from './../../common/interfaces/classes/classroomUser.interface';\r\nimport { Classroom, ClassroomUser, InviteUser } from 'common/interfaces';\r\nimport { BaseApiService } from 'services';\r\n\r\nclass ClassroomService extends BaseApiService<any, Classroom> {\r\n  resource = 'classes';\r\n\r\n  async getMyRole(classId: string) {\r\n    return (await this._repository.get(`${this.resource}/${classId}/role`)).data;\r\n  }\r\n\r\n  async getClassUsers(classId: string): Promise<ClassroomUser[]> {\r\n    return (await this._repository.get(`${this.resource}/${classId}/people`)).data.users;\r\n  }\r\n\r\n  async submitInvitation(data: InviteUser) {\r\n    return (await this._repository.post(`${this.resource}/invite`, data)).data;\r\n  }\r\n\r\n  async getClassData(classId: string): Promise<any> {\r\n    return {\r\n      myRole: (await this._repository.get(`${this.resource}/${classId}/role`)).data.role as UserRole,\r\n      data: await this.getOne(classId),\r\n    };\r\n  }\r\n}\r\n\r\nexport default ClassroomService;\r\n","import { MultipleSxTypes } from 'common/type';\r\n\r\nexport const peopleTabSx: MultipleSxTypes = {\r\n  root: {\r\n    width: '650px',\r\n  },\r\n\r\n  header: {\r\n    py: 1,\r\n    mt: 3,\r\n    px: 2,\r\n    borderBottom: 1,\r\n    borderColor: 'primary.main',\r\n    '& .MuiTypography-root': {\r\n      color: 'primary.main',\r\n      fontSize: 32,\r\n    },\r\n    '& .MuiButtonBase-root': {\r\n      color: 'primary.main',\r\n      width: 48,\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Typography, Box, Stack, Button, TextField } from '@mui/material';\r\nimport { SimpleDialog } from 'components';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { InviteFormProps } from './type';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup.string().email().required('Email is required'),\r\n});\r\n\r\nexport const InviteForm = ({ open, title, handleClose, onSubmit }: InviteFormProps) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validateOnChange: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      onSubmit(values.email);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SimpleDialog open={open} handleClose={handleClose} title={title} width={300}>\r\n      <Box component=\"form\" noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <Typography variant=\"body2\" gutterBottom component=\"p\">\r\n          Send an invitation link to this email\r\n        </Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Enter email\"\r\n          variant=\"standard\"\r\n          fullWidth\r\n          sx={{ mt: 1, mb: 2 }}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Invite</Button>\r\n        </Stack>\r\n      </Box>\r\n    </SimpleDialog>\r\n  );\r\n};\r\n","import { Mail, PersonAddOutlined } from '@mui/icons-material';\r\nimport {\r\n  Avatar,\r\n  Container,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Stack,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { ClassroomUser, UserRole } from 'common/interfaces';\r\nimport ClassroomService from '../../service';\r\nimport React from 'react';\r\nimport { peopleTabSx } from './style';\r\nimport { PeopleTabProps } from './type';\r\nimport { useParams } from 'react-router';\r\nimport { InviteForm } from './InviteForm';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { showMessage } from 'store/slices';\r\n\r\nexport const PeopleTab = ({ role }: PeopleTabProps) => {\r\n  const { id } = useParams();\r\n  const service = new ClassroomService();\r\n  const dispatch = useAppDispatch();\r\n  const [data, setData] = React.useState<ClassroomUser[]>([]);\r\n  const [inviteTeacher, showTeacherInviteForm] = React.useState<boolean>(false);\r\n  const [inviteStudent, showStudentInviteForm] = React.useState<boolean>(false);\r\n\r\n  const fetchData = (classId: string) => {\r\n    service.getClassUsers(classId).then((users: ClassroomUser[]) => {\r\n      setData(users);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (id) {\r\n      console.log('log ~ file: index.tsx ~ line 27 ~ PeopleTab ~ id', id);\r\n      fetchData(id);\r\n    }\r\n  }, []);\r\n\r\n  const checkRole = (role: UserRole, type: 'Teachers' | 'Students') => {\r\n    if (type === 'Teachers') return role !== UserRole.STUDENT;\r\n    else return role === UserRole.STUDENT;\r\n  };\r\n\r\n  const inviteBtnHandler = (type: 'Teachers' | 'Students') => {\r\n    console.log('log ~ file: index.tsx ~ line 48 ~ inviteBtnHandler ~ type', type);\r\n    if (type === 'Teachers') showTeacherInviteForm(true);\r\n    else showStudentInviteForm(true);\r\n  };\r\n\r\n  const submitInvite = (invitedRole: UserRole, email: string) => {\r\n    service\r\n      .submitInvitation({\r\n        class_id: id as string,\r\n        role: invitedRole,\r\n        email: email,\r\n      })\r\n      .then((d) => {\r\n        console.log(d);\r\n        if (id) fetchData(id);\r\n        dispatch(showMessage({ message: 'Email submited!' }));\r\n      })\r\n      .catch((err) => {\r\n        console.log('log ~ file: index.tsx ~ line 66 ~ .then ~ err', err);\r\n        dispatch(showMessage({ message: 'Error when submitted invitation! Reason: ' + err.message, type: 'error' }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={false} sx={peopleTabSx.root}>\r\n      {['Teachers', 'Students'].map((t: any) => (\r\n        <React.Fragment key={t}>\r\n          <Stack direction=\"row\" justifyContent=\"space-between\" sx={peopleTabSx.header}>\r\n            <Typography>{t}</Typography>\r\n            {role !== UserRole.STUDENT && (\r\n              <IconButton\r\n                onClick={() => {\r\n                  inviteBtnHandler(t);\r\n                }}\r\n              >\r\n                <PersonAddOutlined />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n          <List>\r\n            {data &&\r\n              data\r\n                .filter(\r\n                  (u: ClassroomUser) =>\r\n                    checkRole(u.role, t) && (role !== UserRole.STUDENT || u.status !== 'INACTIVATED'),\r\n                )\r\n                .map((u: ClassroomUser, idx: number) => (\r\n                  <React.Fragment key={idx}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                      <ListItemAvatar>\r\n                        {u.user_id.avatar ? (\r\n                          <Avatar alt={u.user_id.first_name} src={u.user_id.avatar} sx={{ bgcolor: 'primary.main' }} />\r\n                        ) : (\r\n                          <Avatar sx={{ bgcolor: 'primary.main' }}>{u.user_id.first_name.charAt(0)}</Avatar>\r\n                        )}\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={u.user_id.first_name + ' ' + u.user_id.last_name}\r\n                        secondary={\r\n                          <>\r\n                            <Typography\r\n                              sx={{ display: 'inline' }}\r\n                              component=\"span\"\r\n                              variant=\"body2\"\r\n                              color=\"text.primary\"\r\n                            >\r\n                              {u.user_id.email}\r\n                            </Typography>\r\n                            {u.status === 'INACTIVATED' && ' - (Inviting)'}\r\n                          </>\r\n                        }\r\n                      />\r\n                      <Tooltip title={`Send Mail to ${u.user_id.email}`}>\r\n                        <IconButton href={`mailto:${u.user_id.email}`}>\r\n                          <Mail />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </React.Fragment>\r\n                ))}\r\n          </List>\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      <InviteForm\r\n        title=\"Invite Teachers\"\r\n        open={inviteTeacher}\r\n        handleClose={() => showTeacherInviteForm(false)}\r\n        onSubmit={(email: string) => {\r\n          submitInvite(UserRole.TEACHER, email);\r\n          showTeacherInviteForm(false);\r\n        }}\r\n      />\r\n\r\n      <InviteForm\r\n        title=\"Invite students\"\r\n        open={inviteStudent}\r\n        handleClose={() => showStudentInviteForm(false)}\r\n        onSubmit={(email: string) => {\r\n          submitInvite(UserRole.STUDENT, email);\r\n          showStudentInviteForm(false);\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import { MultipleSxTypes } from 'common/type';\r\n\r\nexport const bannerSx: MultipleSxTypes = {\r\n  card_stack: {\r\n    mt: '-98px',\r\n    whiteSpace: 'nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'end',\r\n    '& .MuiIconButton-root': {\r\n      mx: 1,\r\n      my: 0.5,\r\n      color: '#fff',\r\n    },\r\n  },\r\n  card: {\r\n    borderRadius: 2,\r\n  },\r\n  header: {\r\n    color: '#fff',\r\n    width: {\r\n      xs: '80%',\r\n      md: '90%',\r\n    },\r\n    p: 2,\r\n    '& .MuiBox-root': {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n  },\r\n  header_title: {\r\n    fontSize: 30,\r\n    fontWeight: 500,\r\n  },\r\n  header_section: {\r\n    fontSize: 14,\r\n  },\r\n  content: {\r\n    p: 3,\r\n  },\r\n  expand_row: {\r\n    gap: 1,\r\n    '& .MuiTypography-root:first-of-type': {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n};\r\n","import { InfoOutlined, Info } from '@mui/icons-material';\r\nimport { Box, Card, CardContent, CardMedia, IconButton, Stack, Collapse, Typography } from '@mui/material';\r\nimport { Classroom, UserRole } from 'common/interfaces';\r\nimport React from 'react';\r\nimport { bannerSx } from './style';\r\nimport { StreamProps } from './type';\r\n\r\nexport const StreamTab = ({ classData, role }: StreamProps) => {\r\n  const [details, showDetails] = React.useState<boolean>(true);\r\n\r\n  const toggleShowDetails = () => {\r\n    showDetails((prvState) => !prvState);\r\n  };\r\n\r\n  return (\r\n    <Box minHeight=\"100vh\">\r\n      {/* BANNER */}\r\n      <Card sx={bannerSx.card} elevation={details ? 4 : 0}>\r\n        <CardMedia component=\"img\" height=\"240\" image={classData.image} alt=\"bg\" />\r\n        <Stack spacing={2} direction=\"row\" sx={bannerSx.card_stack}>\r\n          <Box sx={bannerSx.header}>\r\n            <Box sx={bannerSx.header_title}>{classData.title}</Box>\r\n            <Box sx={bannerSx.header_section}>{classData.section}</Box>\r\n          </Box>\r\n\r\n          <IconButton onClick={toggleShowDetails}>{details ? <Info /> : <InfoOutlined />}</IconButton>\r\n        </Stack>\r\n\r\n        <Collapse in={details}>\r\n          <CardContent sx={bannerSx.content}>\r\n            {role !== UserRole.STUDENT && (\r\n              <Stack direction=\"row\" sx={bannerSx.expand_row}>\r\n                <Typography variant=\"body2\">Class code</Typography>\r\n                <Typography variant=\"body2\">{classData.code}</Typography>\r\n              </Stack>\r\n            )}\r\n            {classData?.subject && (\r\n              <Stack direction=\"row\" sx={bannerSx.expand_row}>\r\n                <Typography variant=\"body2\">Subject</Typography>\r\n                <Typography variant=\"body2\">{classData.subject}</Typography>\r\n              </Stack>\r\n            )}\r\n            {classData?.room && (\r\n              <Stack direction=\"row\" sx={bannerSx.expand_row}>\r\n                <Typography variant=\"body2\">Room</Typography>\r\n                <Typography variant=\"body2\">{classData.room}</Typography>\r\n              </Stack>\r\n            )}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const ClassworkTab = () => {\r\n  return <div>Classwork Tab</div>;\r\n};\r\n","import { MultipleSxTypes } from 'common/type';\r\n\r\nexport const settingModalSx: MultipleSxTypes = {\r\n  root: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    bgcolor: 'background.paper',\r\n  },\r\n\r\n  toolbar: {\r\n    borderBottom: 1,\r\n    borderColor: 'divider',\r\n    '& .MuiTypography-root': {\r\n      fontWeight: 500,\r\n    },\r\n    '& .MuiButton-root': {\r\n      ml: 'auto',\r\n      textTransform: 'capitalize',\r\n    },\r\n  },\r\n\r\n  container: {\r\n    maxWidth: '700px',\r\n  },\r\n\r\n  form: {\r\n    mt: 3,\r\n    p: 3,\r\n    border: 1,\r\n    borderColor: 'divider',\r\n    borderRadius: 2,\r\n    '& .MuiTypography-root': {\r\n      fontSize: '24px',\r\n      mb: 1,\r\n    },\r\n    '& .MuiTextField-root': {\r\n      my: 1,\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { settingModalSx } from './style';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Box, Grow, IconButton, Modal, Toolbar, Typography, Container, TextField, Button } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup\r\n    .string()\r\n    .min(1, 'Classroom Title should be of 1-100 characters length')\r\n    .max(100, 'Classroom Title should be of 1-100 characters length')\r\n    .required('Classroom Title is required'),\r\n  section: yup\r\n    .string()\r\n    .min(1, 'Section should be of 1-50 characters length')\r\n    .max(50, 'Section should be of 1-50 characters length'),\r\n  subject: yup\r\n    .string()\r\n    .min(1, 'Subject should be of 1-50 characters length')\r\n    .max(50, 'Subject should be of 1-50 characters length'),\r\n  room: yup\r\n    .string()\r\n    .min(1, 'Room should be of 1-50 characters length')\r\n    .max(50, 'Room should be of 1-50 characters length'),\r\n});\r\nexport const ClassroomSetting = ({}) => {\r\n  const [modal, showModal] = React.useState<boolean>(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      room: '',\r\n      section: '',\r\n      subject: '',\r\n    },\r\n    validateOnBlur: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log('log ~ file: index.tsx ~ line 39 ~ ClassroomSetting ~ values', values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={() => showModal(true)}\r\n        color=\"inherit\"\r\n      >\r\n        <SettingsIcon sx={{ fontSize: 24 }} />\r\n      </IconButton>\r\n\r\n      <Modal\r\n        open={modal}\r\n        onClose={() => showModal(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Grow in={modal} timeout={300}>\r\n          <Box sx={settingModalSx.root}>\r\n            <Toolbar sx={settingModalSx.toolbar}>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"close modal\"\r\n                onClick={() => showModal(false)}\r\n              >\r\n                <CloseIcon sx={{ fontSize: 20 }} />\r\n              </IconButton>\r\n              <Typography variant=\"body1\">Classroom setting</Typography>\r\n\r\n              <Button variant=\"contained\">Save</Button>\r\n            </Toolbar>\r\n\r\n            <Container maxWidth={false} sx={settingModalSx.container}>\r\n              <Box\r\n                sx={settingModalSx.form}\r\n                component=\"form\"\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={formik.handleSubmit}\r\n              >\r\n                <Typography color=\"primary\">Class Details</Typography>\r\n                <TextField\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  label=\"Class name (required)\"\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  value={formik.values.title}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.title && Boolean(formik.errors.title)}\r\n                  helperText={formik.touched.title && formik.errors.title}\r\n                />\r\n                <TextField\r\n                  id=\"section\"\r\n                  name=\"section\"\r\n                  label=\"Section\"\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.section}\r\n                  error={formik.touched.section && Boolean(formik.errors.section)}\r\n                  helperText={formik.touched.section && formik.errors.section}\r\n                />\r\n                <TextField\r\n                  id=\"subject\"\r\n                  name=\"subject\"\r\n                  label=\"Subject\"\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.subject}\r\n                  error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                  helperText={formik.touched.subject && formik.errors.subject}\r\n                />\r\n                <TextField\r\n                  id=\"room\"\r\n                  name=\"room\"\r\n                  label=\"Room\"\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.room}\r\n                  error={formik.touched.room && Boolean(formik.errors.room)}\r\n                  helperText={formik.touched.room && formik.errors.room}\r\n                />\r\n              </Box>\r\n            </Container>\r\n          </Box>\r\n        </Grow>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { MultipleSxTypes } from 'common/type';\r\n\r\nexport const navSx: MultipleSxTypes = {\r\n  tabsContainer: {\r\n    borderBottom: 1,\r\n    borderColor: 'divider',\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    mt: {\r\n      xs: 0,\r\n      md: -8,\r\n    },\r\n    mb: '-2px',\r\n    '& .MuiTab-root': {\r\n      height: 64,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      textTransform: 'capitalize',\r\n      fontWeight: 'semibold',\r\n      fontSize: 14,\r\n      px: 3,\r\n      transition: 'background-color 400ms ease-in-out',\r\n      ':hover': {\r\n        bgcolor: 'grey.100',\r\n      },\r\n    },\r\n  },\r\n  link: {\r\n    color: 'text.primary',\r\n    borderColor: 'divider',\r\n  },\r\n  progressBar: {\r\n    mt: '-3px',\r\n  },\r\n};\r\n\r\nexport const mainSx: MultipleSxTypes = {\r\n  container: {\r\n    mt: 4,\r\n    p: '0 !important',\r\n    maxWidth: '1000px',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Classroom, UserRole } from 'common/interfaces';\r\nimport { Navbar, ProfileBtn, TabPanel, useAuth } from 'components';\r\nimport { drawerItemConfigs } from 'configs';\r\nimport { Box, Typography, Tab, Tabs, LinearProgress, Link, Container } from '@mui/material';\r\nimport { ClassroomSetting, ClassworkTab, PeopleTab, StreamTab } from './subcomponents';\r\nimport { navSx, mainSx } from './style';\r\nimport { useParams } from 'react-router-dom';\r\nimport ClassroomService from './service';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { showMessage } from 'store/slices';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst ClassroomBoard = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const classService = new ClassroomService();\r\n  const { userData } = useAuth();\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n  const [tabValue, setTabValue] = React.useState<number>(0);\r\n  const [classData, setClassData] = React.useState<Classroom | null>(null);\r\n  const [role, setMyRole] = React.useState<UserRole>(UserRole.STUDENT);\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (id) {\r\n      classService\r\n        .getClassData(id)\r\n        .then(({ data, myRole }) => {\r\n          setClassData(data);\r\n          setMyRole(myRole as UserRole);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          dispatch(showMessage({ message: 'Cannot find class', type: 'error' }));\r\n          setLoading(false);\r\n          navigate('/not-found');\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar\r\n        items={drawerItemConfigs}\r\n        toolbarComponents={\r\n          <>\r\n            <Box sx={navSx.tabsContainer}>\r\n              <Tabs value={tabValue} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                <Tab label=\"Stream\" id=\"one\" />\r\n                <Tab label=\"Classwork\" id=\"two\" />\r\n                <Tab label=\"People\" id=\"three\" />\r\n              </Tabs>\r\n            </Box>\r\n            {loading && <LinearProgress sx={navSx.progressBar} />}\r\n          </>\r\n        }\r\n      >\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          <Link underline=\"hover\" href={'/'} sx={navSx.link}>\r\n            {classData && classData.title}\r\n          </Link>\r\n        </Typography>\r\n\r\n        <Box>\r\n          <ClassroomSetting />\r\n          {userData && <ProfileBtn fname={userData.first_name} imageUrl={userData.avatar} />}\r\n        </Box>\r\n      </Navbar>\r\n      {!loading && classData && role && (\r\n        <Container maxWidth={false} sx={mainSx.container}>\r\n          <TabPanel value={tabValue} index={0}>\r\n            <StreamTab role={role} classData={classData} />\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={1}>\r\n            <ClassworkTab />\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={2}>\r\n            <PeopleTab role={role} />\r\n          </TabPanel>\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ClassroomBoard;\r\n"],"sourceRoot":""}