{"version":3,"sources":["configs/theme.config.tsx","common/utils.ts","pages/route.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx","services/repository/index.ts","components/context/ThemeContext.tsx","common/constants/index.ts","components/context/Auth/jwt.service.ts","components/context/Auth/google.service.ts","components/context/Auth/index.tsx","store/slices/loading.slice.ts","store/slices/message.slice.ts","store/slices/theme.slice.ts","components/navbar/style.tsx","components/navbar/index.tsx","components/modal/style.ts","components/modal/SimpleDialog.tsx","components/ProfileBtn/index.tsx","components/TabPanel/index.tsx","components/Snackbar/index.tsx","store/hooks.ts","services/base.service.ts"],"names":["mainTheme","palette","typography","fontFamily","join","Utils","mainArr","searchText","toLowerCase","filter","itemObj","searchInObj","prop","hasOwnProperty","value","this","searchInString","Array","isArray","searchInArray","arr","includes","S4","Math","floor","random","toString","substring","item","array","indexOf","push","splice","text","replace","t","o","id","result","p","findById","hue","mainColors","length","name","url","results","RegExp","exec","decodeURIComponent","Dashboard","React","lazy","LoginPage","RegisterPage","Classroom","ProfilePage","InvitationPage","NotFoundPage","Wrapper","children","Suspense","fallback","LinearProgress","AuthWrapped","isAuthed","search","to","encodeURIComponent","window","location","pathname","NotAuthWrapped","link","getParameterByName","appRoutes","path","element","App","dispatch","useAppDispatch","useLocation","useAppSelector","state","message","type","useAuth","isAuthenticated","pending","routes","useRoutes","Fragment","open","msg","severity","handleClose","hideMessage","themeConfig","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","staticReducer","loading","loadingReducer","messageReducer","theme","themeReducer","createReducers","asyncReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","baseURL","process","repository","axios","create","withCredentials","ThemeContext","createTheme","ThemeProvider","JWT_SESSION_KEY","JWT_REFRESH_SESSION_KEY","JwtAuthService","isAuthTokenValid","access_token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","_setSession","refresh_token","localStorage","setItem","defaults","headers","common","removeItem","loginCallback","logoutCallback","getItem","interceptors","response","use","err","status","config","__isRetryRequest","Promise","reject","data","body","resolve","post","catch","token","get","_id","GoogleValidateService","resource","_repository","a","token_id","log","BaseApiService","defaultValue","signIn","signInWithGG","register","logOut","reload","userData","undefined","AuthContext","createContext","AuthProvider","useState","infor","setInfor","isAuthen","setIsAuthen","setIsPending","jwtService","ggService","checkJWT","init","onAutoLogIn","onAutoLogOut","useEffect","getUserData","error","defaultProps","logIn","validateToken","res","Provider","useContext","loadingSlice","createSlice","initialState","isLoading","reducers","showLoading","action","payload","actions","reducer","messageSlice","showMessage","themeSlice","setTheme","getTheme","navbarSx","bgcolor","color","borderBottom","borderColor","drawerSx","list","width","px","btnItem","fontWeight","fontSize","height","textItem","letterSpacing","Navbar","toolbarComponents","items","trigger","useScrollTrigger","disableHysteresis","threshold","drawer","showDrawer","navigate","useNavigate","toggleDrawer","event","key","Drawer","anchor","onClose","List","sx","role","onKeyDown","ListItemButton","onClick","ListItemIcon","HomeOutlined","ListItemText","primary","Divider","Settings","AppBar","elevation","Toolbar","IconButton","size","edge","aria-label","Menu","simpleDialogStyle","root","position","top","left","transform","borderRadius","boxShadow","pb","title","SimpleDialog","props","Modal","aria-labelledby","aria-describedby","Box","Typography","gutterBottom","ProfileBtn","fname","imageUrl","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","Avatar","alt","src","charAt","MenuListProps","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","MenuItem","TabPanel","index","other","Collapse","in","timeout","NotificationSnackbar","Snackbar","autoHideDuration","TransitionComponent","Slide","direction","minWidth","Alert","useDispatch","useSelector","defaultQuery","page","per_page","sort_by","sort_order","query","objToQuery","obj","put","delete","URLSearchParams"],"mappings":"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","file":"static/js/main.e9ad9455.chunk.js","sourcesContent":["export const mainTheme = {\r\n  palette: {},\r\n  typography: {\r\n    fontFamily: [\r\n      'Poppins',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n};\r\n","class Utils {\r\n  static filterArrayByString(mainArr: any[], searchText: string): any[] {\r\n    if (searchText === '') {\r\n      return mainArr;\r\n    }\r\n\r\n    searchText = searchText.toLowerCase();\r\n\r\n    return mainArr.filter((itemObj) => {\r\n      return this.searchInObj(itemObj, searchText);\r\n    });\r\n  }\r\n\r\n  static searchInObj(itemObj: Record<string, any>, searchText: string): boolean {\r\n    for (const prop in itemObj) {\r\n      if (!itemObj.hasOwnProperty(prop)) {\r\n        continue;\r\n      }\r\n\r\n      const value = itemObj[prop];\r\n\r\n      if (typeof value === 'string') {\r\n        if (this.searchInString(value, searchText)) {\r\n          return true;\r\n        }\r\n      } else if (Array.isArray(value)) {\r\n        if (this.searchInArray(value, searchText)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if (typeof value === 'object') {\r\n        if (this.searchInObj(value, searchText)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static searchInArray(arr: any[], searchText: string): boolean {\r\n    for (const value of arr) {\r\n      if (typeof value === 'string') {\r\n        if (this.searchInString(value, searchText)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if (typeof value === 'object') {\r\n        if (this.searchInObj(value, searchText)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static searchInString(value: string, searchText: string): boolean {\r\n    return value.toLowerCase().includes(searchText);\r\n  }\r\n\r\n  static generateGUID(): string {\r\n    function S4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n\r\n    return S4() + S4();\r\n  }\r\n\r\n  static toggleInArray(item: any, array: any[]): void {\r\n    if (array.indexOf(item) === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(array.indexOf(item), 1);\r\n    }\r\n  }\r\n\r\n  static sanitizeString(text: string): string {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '-') // Replace spaces with -\r\n      .replace(/\\W+/g, '') // Remove all non-word chars\r\n      .replace(/--+/g, '-') // Replace multiple - with single -\r\n      .replace(/^-+/, '') // Trim - from start of text\r\n      .replace(/-+$/, ''); // Trim - from end of text\r\n  }\r\n\r\n  static stringToSlug(t: string): string {\r\n    return t\r\n      .toLowerCase()\r\n      .replace(/ /g, '-')\r\n      .replace(/[^\\w-]+/g, '');\r\n  }\r\n\r\n  static findById(o: { id: object; [k: string]: any }, id: object): object | null {\r\n    //Early return\r\n    if (o.id === id) {\r\n      return o;\r\n    }\r\n    let result, p;\r\n    for (p in o) {\r\n      if (o.hasOwnProperty(p) && typeof o[p] === 'object') {\r\n        result = this.findById(o[p], id);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static randomMatColor(hue: string): string[] {\r\n    hue = hue ? hue : '400';\r\n    const mainColors = [\r\n      'amber',\r\n      'blue',\r\n      'blueGrey',\r\n      'brown',\r\n      'common',\r\n      'cyan',\r\n      'deepOrange',\r\n      'deepPurple',\r\n      'green',\r\n      'grey',\r\n      'indigo',\r\n      'lightBlue',\r\n      'lightGreen',\r\n      'lime',\r\n      'orange',\r\n      'pink',\r\n      'purple',\r\n      'red',\r\n      'teal',\r\n      'yellow',\r\n    ];\r\n    const randomColor = mainColors[Math.floor(Math.random() * mainColors.length)];\r\n    return [randomColor, hue];\r\n  }\r\n\r\n  static getParameterByName(name: string, url: string) {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import { RouteConfigs } from 'common/type';\r\nimport { Navigate } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { LinearProgress } from '@mui/material';\r\nimport Utils from 'common/utils';\r\n\r\n// main screen\r\nconst Dashboard = React.lazy(() => import('./Dashboard'));\r\n//Auth\r\nconst LoginPage = React.lazy(() => import('./Auth/Login'));\r\nconst RegisterPage = React.lazy(() => import('./Auth/Register'));\r\n\r\nconst Classroom = React.lazy(() => import('./Classroom'));\r\n\r\nconst ProfilePage = React.lazy(() => import('./Profile'));\r\n\r\nconst InvitationPage = React.lazy(() => import('./InvitationPage'));\r\n\r\nconst NotFoundPage = React.lazy(() => import('./Errors/NotFound'));\r\n\r\n// Public routes\r\nconst Wrapper = ({ children }: { children: any }) => (\r\n  <React.Suspense fallback={<LinearProgress />}>{children}</React.Suspense>\r\n);\r\n\r\n// Authed routes\r\nconst AuthWrapped = ({ isAuthed, children, search = '' }: { isAuthed: boolean; children: any; search: string }) => {\r\n  return isAuthed ? (\r\n    <Wrapper>{children}</Wrapper>\r\n  ) : (\r\n    <Navigate to={'/auth/login?redirect=' + encodeURIComponent(window.location.pathname + window.location.search)} />\r\n  );\r\n};\r\n\r\n//Allow only not authed routes\r\nconst NotAuthWrapped = ({ isAuthed, children, search = '' }: { isAuthed: boolean; children: any; search: string }) => {\r\n  const link = Utils.getParameterByName('redirect', search); // Redirect if needed\r\n  return !isAuthed ? <Wrapper>{children}</Wrapper> : <Navigate to={link ? link : '/'} />;\r\n};\r\n\r\nconst appRoutes = (isAuthed: boolean, search: string): RouteConfigs => {\r\n  const routes: RouteConfigs = [\r\n    {\r\n      path: '/',\r\n      element: (\r\n        <AuthWrapped isAuthed={isAuthed} search={search}>\r\n          <Dashboard />\r\n        </AuthWrapped>\r\n      ),\r\n    },\r\n    {\r\n      path: '/classroom/:id',\r\n      element: (\r\n        <AuthWrapped isAuthed={isAuthed} search={search}>\r\n          <Classroom />\r\n        </AuthWrapped>\r\n      ),\r\n    },\r\n    {\r\n      path: '/profile',\r\n      element: (\r\n        <AuthWrapped isAuthed={isAuthed} search={search}>\r\n          <ProfilePage />\r\n        </AuthWrapped>\r\n      ),\r\n    },\r\n    {\r\n      path: '/classes/join',\r\n      element: (\r\n        <AuthWrapped isAuthed={isAuthed} search={search}>\r\n          <InvitationPage />\r\n        </AuthWrapped>\r\n      ),\r\n    },\r\n    { path: '/auth', element: <Navigate to=\"/auth/login\" /> },\r\n    {\r\n      path: '/auth/login',\r\n      element: (\r\n        <NotAuthWrapped isAuthed={isAuthed} search={search}>\r\n          <LoginPage />\r\n        </NotAuthWrapped>\r\n      ),\r\n    },\r\n    {\r\n      path: '/auth/register',\r\n      element: (\r\n        <NotAuthWrapped isAuthed={isAuthed} search={search}>\r\n          <RegisterPage />\r\n        </NotAuthWrapped>\r\n      ),\r\n    },\r\n    {\r\n      path: '/not-found',\r\n      element: (\r\n        <Wrapper>\r\n          <NotFoundPage />\r\n        </Wrapper>\r\n      ),\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <Navigate to=\"/not-found\" />,\r\n    },\r\n  ];\r\n\r\n  return routes;\r\n};\r\n\r\nexport default appRoutes;\r\n","import { LinearProgress } from '@mui/material';\r\nimport { NotificationSnackbar } from 'components';\r\nimport { mainTheme } from 'configs/theme.config';\r\nimport React from 'react';\r\nimport { useRoutes, useLocation } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { hideMessage } from 'store/slices';\r\nimport { ThemeContext, useAuth } from './components/context';\r\nimport appRoutes from './pages/route';\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const { search } = useLocation(); // for url params\r\n  const { message, type } = useAppSelector((state) => state.message);\r\n  const { isAuthenticated, pending } = useAuth();\r\n  const routes = useRoutes(appRoutes(isAuthenticated, search));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NotificationSnackbar\r\n        open={message !== ''}\r\n        msg={message}\r\n        severity={type}\r\n        handleClose={() => dispatch(hideMessage())}\r\n      />\r\n      <ThemeContext themeConfig={mainTheme}>{!pending ? routes : <LinearProgress />}</ThemeContext>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { loadingReducer, messageReducer, themeReducer } from './slices';\r\n\r\n//Utils functions such as dialog state, loading state, ....\r\nconst staticReducer = {\r\n  loading: loadingReducer,\r\n  message: messageReducer,\r\n  theme: themeReducer,\r\n};\r\n\r\nfunction createReducers(asyncReducers: any) {\r\n  return combineReducers({\r\n    ...staticReducer,\r\n    ...asyncReducers,\r\n  });\r\n}\r\n/* eslint-disable no-underscore-dangle */\r\nconst store: any = createStore(\r\n  createReducers({}),\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n/* eslint-enable */\r\nstore.asyncReducers = {};\r\n\r\nconst injectReducer = (key: string, reducer: any) => {\r\n  if (store.asyncReducers[key]) return;\r\n  store.asyncReducers[key] = reducer;\r\n  store.replaceReducer(createReducers(store.asyncReducers));\r\n};\r\n\r\nexport { store, injectReducer };\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './assets/styles/index.css';\r\nimport { CssBaseline } from '@mui/material';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { AuthProvider } from 'components';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <Provider store={store}>\r\n        <CssBaseline />\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import axios from 'axios';\r\n\r\nconst baseURL = `${process.env.REACT_APP_BACKEND_DOMAIN}/${process.env.REACT_APP_BACKEND_API_END_POINT}/${process.env.REACT_APP_API_VERSION}`;\r\n\r\nexport const repository = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n","import { createTheme } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/system';\r\nimport React from 'react';\r\n\r\ntype ThemeCtxProps = {\r\n  children: any;\r\n  themeConfig: any;\r\n};\r\n\r\nexport const ThemeContext = ({ children, themeConfig }: ThemeCtxProps) => {\r\n  const theme = createTheme(themeConfig);\r\n\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n","export const JWT_SESSION_KEY = 'jwt_access_token';\r\nexport const JWT_REFRESH_SESSION_KEY = 'jwt_refresh_token';\r\n\r\nexport const ROLE_STUDENT = 'STUDENT';\r\nexport const ROLE_TEACHER = 'TEACHER';\r\n","import { repository } from 'services/repository';\r\nimport { JWT_SESSION_KEY, JWT_REFRESH_SESSION_KEY } from 'common/constants';\r\nimport { AuthData, AuthResponse } from 'common/interfaces';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nclass JwtAuthService {\r\n  init(loginCallback: VoidFunction, logoutCallback: VoidFunction): void {\r\n    let access_token = localStorage.getItem(JWT_SESSION_KEY);\r\n    let refresh_token = localStorage.getItem(JWT_REFRESH_SESSION_KEY);\r\n\r\n    repository.interceptors.response.use(\r\n      (response) => response,\r\n      (err) => {\r\n        if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\r\n          this._setSession(null, null); //Reset session\r\n          logoutCallback(); // Callback\r\n        }\r\n        return Promise.reject(err.response.data);\r\n      },\r\n    );\r\n\r\n    if (this.isAuthTokenValid(access_token)) {\r\n      this._setSession(access_token, refresh_token); // SET for axios.default.header\r\n      loginCallback();\r\n    } else {\r\n      //TODO: Make use of Refresh token\r\n      this._setSession(null, null); //Reset session\r\n      logoutCallback();\r\n    }\r\n  }\r\n\r\n  logIn(body: AuthData): Promise<AuthResponse> {\r\n    return new Promise((resolve, reject) => {\r\n      //TODO: Check again\r\n      repository\r\n        .post(`/auth/login`, body)\r\n        .then((response: any) => {\r\n          if (response.data) {\r\n            //eslint disable\r\n            const access_token = response.data.access_token;\r\n            const refresh_token = response.data.refresh_token;\r\n            this._setSession(access_token, refresh_token);\r\n            resolve(response.data);\r\n          }\r\n        })\r\n        .catch((response) => reject(response));\r\n    });\r\n  }\r\n\r\n  register(body: AuthData): Promise<AuthResponse> {\r\n    return new Promise((resolve, reject) => {\r\n      repository\r\n        .post(`/auth/register`, body)\r\n        .then((response: any) => {\r\n          if (response) {\r\n            // TODO: login after registered ?\r\n            const access_token = response.data.access_token;\r\n            const refresh_token = response.data.refresh_token;\r\n            this._setSession(access_token, refresh_token);\r\n\r\n            resolve(response.data);\r\n          }\r\n        })\r\n        .catch((response) => reject(response));\r\n    });\r\n  }\r\n\r\n  logOut(): Promise<any> {\r\n    const refresh_token: any = localStorage.getItem(JWT_REFRESH_SESSION_KEY);\r\n    return new Promise((resolve, reject) => {\r\n      repository\r\n        .post(`/auth/logout`, { refresh_token })\r\n        .then((response: any) => {\r\n          this._setSession(null, null);\r\n\r\n          resolve(response.data);\r\n        })\r\n        .catch((response) => reject(response));\r\n    });\r\n  }\r\n\r\n  getUserData(): Promise<any> {\r\n    //TODO: change api here\r\n    const token: any = localStorage.getItem(JWT_SESSION_KEY);\r\n    const decoded: any = jwtDecode(token);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      repository\r\n        .get(`/users/${decoded?._id}`)\r\n        .then((response: any) => {\r\n          if (response.data) {\r\n            resolve(response.data);\r\n          }\r\n        })\r\n        .catch((response) => reject(response));\r\n    });\r\n  }\r\n\r\n  isAuthTokenValid = (access_token: string | null): boolean => {\r\n    if (!access_token) {\r\n      return false;\r\n    }\r\n    const decoded: any = jwtDecode(access_token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n      console.warn('access token expired');\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //HELPER FUNCTIONS\r\n  _setSession = (access_token: string | null, refresh_token: string | null): void => {\r\n    if (access_token) {\r\n      localStorage.setItem(JWT_SESSION_KEY, access_token);\r\n      repository.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    } else {\r\n      localStorage.removeItem(JWT_SESSION_KEY);\r\n      delete repository.defaults.headers.common['Authorization'];\r\n    }\r\n\r\n    if (refresh_token) {\r\n      localStorage.setItem(JWT_REFRESH_SESSION_KEY, refresh_token);\r\n    } else localStorage.removeItem(JWT_REFRESH_SESSION_KEY);\r\n  };\r\n}\r\n\r\nexport default JwtAuthService;\r\n","import { BaseApiService } from 'services';\r\nimport { GoogleValidationData, AuthResponse } from 'common/interfaces';\r\nimport { JWT_REFRESH_SESSION_KEY, JWT_SESSION_KEY } from 'common/constants';\r\n\r\nclass GoogleValidateService extends BaseApiService<GoogleValidationData, AuthResponse> {\r\n  resource = '/auth/google-activate';\r\n\r\n  async validateToken(token: string): Promise<AuthResponse> {\r\n    const body: GoogleValidationData = { token_id: token };\r\n    return new Promise((resolve, reject) => {\r\n      //TODO: Check again\r\n      this._repository\r\n        .post(`${this.resource}`, body)\r\n        .then((response: any) => {\r\n          if (response.data) {\r\n            console.log(\r\n              'log ~ file: google.service.ts ~ line 16 ~ GoogleValidateService ~ .then ~ response.data',\r\n              response.data,\r\n            );\r\n            //eslint disable\r\n            const access_token = response.data.access_token;\r\n            const refresh_token = response.data.refresh_token;\r\n            this._setSession(access_token, refresh_token);\r\n            resolve(response.data);\r\n          }\r\n        })\r\n        .catch((response) => reject(response));\r\n    });\r\n  }\r\n\r\n  //HELPER FUNCTIONS\r\n  _setSession = (access_token: string | null, refresh_token: string | null) => {\r\n    if (access_token) {\r\n      localStorage.setItem(JWT_SESSION_KEY, access_token);\r\n      this._repository.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    } else {\r\n      localStorage.removeItem(JWT_SESSION_KEY);\r\n      delete this._repository.defaults.headers.common['Authorization'];\r\n    }\r\n\r\n    if (refresh_token) {\r\n      localStorage.setItem(JWT_REFRESH_SESSION_KEY, refresh_token);\r\n    } else localStorage.removeItem(JWT_REFRESH_SESSION_KEY);\r\n  };\r\n}\r\n\r\nexport default GoogleValidateService;\r\n","import { AuthData, AuthResponse, User } from 'common/interfaces';\r\nimport { repository } from 'services/repository';\r\nimport JwtAuthService from './jwt.service';\r\nimport GoogleValidateService from './google.service';\r\n\r\nimport React from 'react';\r\n\r\nexport type AuthProps = {\r\n  signIn: (data: AuthData) => Promise<any>;\r\n  signInWithGG: (tokenId: string) => Promise<any>;\r\n  register: (data: AuthData) => Promise<any>;\r\n  logOut: () => void;\r\n  reload: () => void;\r\n  isAuthenticated: boolean;\r\n  pending: boolean;\r\n  userData: User | undefined;\r\n};\r\n\r\nconst defaultValue: AuthProps = {\r\n  signIn: () => new Promise(() => {}),\r\n  signInWithGG: () => new Promise(() => {}),\r\n  register: () => new Promise(() => {}),\r\n  logOut: () => {},\r\n  reload: () => {},\r\n  isAuthenticated: false,\r\n  pending: true, //Auth in pending\r\n  userData: undefined,\r\n};\r\n\r\nconst AuthContext = React.createContext<AuthProps>(defaultValue);\r\n\r\nexport const AuthProvider = ({ children }: { children: any }) => {\r\n  const [infor, setInfor] = React.useState<User | undefined>(undefined);\r\n  const [isAuthen, setIsAuthen] = React.useState<boolean>(false);\r\n  const [pending, setIsPending] = React.useState<boolean>(true);\r\n  const jwtService = new JwtAuthService();\r\n  const ggService = new GoogleValidateService();\r\n\r\n  const checkJWT = () => {\r\n    jwtService.init(onAutoLogIn, onAutoLogOut);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log('Check Auth');\r\n    repository.get('/', { withCredentials: true }); // Send get request to get CSRF token once site is visited.\r\n    checkJWT();\r\n  }, []);\r\n\r\n  const onAutoLogIn = () => {\r\n    console.log('~ onAutoLogIn');\r\n    jwtService\r\n      .getUserData()\r\n      .then((data: any) => {\r\n        setIsAuthen(true);\r\n        setIsPending(false); //Show that the api has been processed\r\n        setInfor(data);\r\n      })\r\n      .catch((err: any) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const onAutoLogOut = () => {\r\n    console.log('~ onAutoLogOut');\r\n    setIsAuthen(false);\r\n    setIsPending(false); //Show that the api has been processed\r\n    setInfor(undefined);\r\n  };\r\n\r\n  const logIn = (body: AuthData) => {\r\n    return new Promise((resolve, reject) => {\r\n      jwtService\r\n        .logIn(body)\r\n        .then((response: any) => {\r\n          onAutoLogIn();\r\n          resolve(response);\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  };\r\n\r\n  const loginWithGoogle = (token: string) => {\r\n    return new Promise((resolve, reject) => {\r\n      ggService\r\n        .validateToken(token)\r\n        .then((response: AuthResponse) => {\r\n          setIsAuthen(true);\r\n          setIsPending(false); //Show that the api has been processed\r\n          setInfor(response.data);\r\n          resolve(response);\r\n        })\r\n        .catch((err: any) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  const register = (body: AuthData) => {\r\n    return new Promise((resolve, reject) => {\r\n      jwtService\r\n        .register(body)\r\n        .then(() => {\r\n          onAutoLogIn();\r\n          resolve(body);\r\n        })\r\n        .catch((res) => {\r\n          reject(res);\r\n        });\r\n    });\r\n  };\r\n\r\n  const logOut = () => {\r\n    setIsAuthen(false);\r\n    return jwtService.logOut().then(onAutoLogOut);\r\n  };\r\n\r\n  const defaultProps: AuthProps = {\r\n    ...defaultValue,\r\n    signIn: logIn,\r\n    signInWithGG: loginWithGoogle,\r\n    register: register,\r\n    logOut: logOut,\r\n    reload: checkJWT,\r\n    isAuthenticated: isAuthen,\r\n    pending: pending,\r\n    userData: infor,\r\n  };\r\n\r\n  return <AuthContext.Provider value={defaultProps}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return React.useContext(AuthContext);\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// Define a type for the slice state\r\ninterface LoadingState {\r\n  isLoading: boolean;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: LoadingState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const loadingSlice = createSlice({\r\n  name: 'loading',\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState,\r\n  reducers: {\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    showLoading: (state, action: PayloadAction<boolean>) => ({\r\n      isLoading: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { showLoading } = loadingSlice.actions;\r\n\r\nexport const loadingReducer = loadingSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// Define a type for the slice state\r\ninterface MessageState {\r\n  message: string;\r\n  type?: 'warning' | 'info' | 'error' | 'success';\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: MessageState = {\r\n  message: '',\r\n  type: 'success',\r\n};\r\n\r\nexport const messageSlice = createSlice({\r\n  name: 'message',\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState,\r\n  reducers: {\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    showMessage: (state, action: PayloadAction<MessageState>) => ({\r\n      ...initialState,\r\n      ...action.payload,\r\n    }),\r\n    hideMessage: (state) => initialState,\r\n  },\r\n});\r\n\r\nexport const { showMessage, hideMessage } = messageSlice.actions;\r\nexport const messageReducer = messageSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// Define a type for the slice state\r\ninterface ThemeState {\r\n  theme: string;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: ThemeState = {\r\n  theme: 'light',\r\n};\r\n\r\nexport const themeSlice = createSlice({\r\n  name: 'theme',\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState,\r\n  reducers: {\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    setTheme: (state, action: PayloadAction<ThemeState>) => {\r\n      const theme = action.payload.theme;\r\n      localStorage.setItem('theme', theme);\r\n      return {\r\n        theme: theme,\r\n      };\r\n    },\r\n    getTheme: (state) => ({\r\n      theme: localStorage.getItem('theme') || 'light',\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { setTheme, getTheme } = themeSlice.actions;\r\nexport const themeReducer = themeSlice.reducer;\r\n","import { SxType, MultipleSxTypes } from 'common/type';\r\nexport const navbarSx: SxType = {\r\n  bgcolor: 'background.paper',\r\n  color: 'text.primary',\r\n  borderBottom: 1,\r\n  borderColor: 'divider',\r\n};\r\n\r\nexport const drawerSx: MultipleSxTypes = {\r\n  list: {\r\n    width: 300,\r\n    px: 1,\r\n  },\r\n  btnItem: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    height: 56,\r\n  },\r\n  textItem: {\r\n    height: 40,\r\n    '& .MuiTypography-root': {\r\n      fontWeight: 500,\r\n      fontSize: 14,\r\n      letterSpacing: '.5px',\r\n    },\r\n  },\r\n};\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport { Divider, Drawer, IconButton, List, ListItemButton, ListItemIcon, ListItemText } from '@mui/material';\r\nimport { NavbarProps } from './type';\r\nimport { drawerSx, navbarSx } from './style';\r\nimport { Menu } from '@mui/icons-material';\r\nimport { HomeOutlined, Settings } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport const Navbar = ({ children, items, toolbarComponents }: NavbarProps) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n  const [drawer, showDrawer] = React.useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n    showDrawer(open);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer anchor={'left'} open={drawer} onClose={toggleDrawer(false)}>\r\n        <List sx={drawerSx.list} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n          <ListItemButton sx={drawerSx.btnItem} onClick={() => navigate('/')}>\r\n            <ListItemIcon>\r\n              <HomeOutlined />\r\n            </ListItemIcon>\r\n            <ListItemText primary={'Classes'} />\r\n          </ListItemButton>\r\n          {/* <Divider />\r\n          <ListItem>\r\n            <ListItemText sx={drawerSx.textItem} primary=\"Enrolled\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemText sx={drawerSx.textItem} primary=\"Teaching\" />\r\n          </ListItem> */}\r\n          <Divider />\r\n          <ListItemButton sx={drawerSx.btnItem} onClick={() => navigate('/profile')}>\r\n            <ListItemIcon>\r\n              <Settings />\r\n            </ListItemIcon>\r\n            <ListItemText primary={'Profile Setting'} />\r\n          </ListItemButton>\r\n        </List>\r\n      </Drawer>\r\n      <AppBar elevation={trigger ? 4 : 0} sx={navbarSx}>\r\n        <Toolbar>\r\n          <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={toggleDrawer(true)}>\r\n            <Menu />\r\n          </IconButton>\r\n          {children}\r\n        </Toolbar>\r\n        {toolbarComponents}\r\n      </AppBar>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","export const simpleDialogStyle = {\r\n  root: {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    bgcolor: 'background.paper',\r\n    borderRadius: 2,\r\n    boxShadow: 24,\r\n    p: 3,\r\n    pb: 1,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n};\r\n","import { Modal, Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { simpleDialogStyle } from './style';\r\nimport { SimpleDialogPropsType } from './type';\r\n\r\nexport const SimpleDialog = ({ open, handleClose, title, children, ...props }: SimpleDialogPropsType) => {\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={simpleDialogStyle.root} {...props}>\r\n        <Typography id=\"modal-modal-title\" sx={simpleDialogStyle.title} gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Avatar, IconButton, Menu, MenuItem } from '@mui/material';\r\nimport { useAuth } from '../context';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ProfileBtnProps } from './type';\r\n\r\nexport const ProfileBtn = ({ fname, imageUrl }: ProfileBtnProps) => {\r\n  const { logOut } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleProfileClicked = () => {\r\n    setAnchorEl(null);\r\n    navigate('/profile');\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    setAnchorEl(null);\r\n    logOut();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n      >\r\n        {imageUrl && imageUrl !== '' ? (\r\n          <Avatar sx={{ width: 32, height: 32 }} alt={fname} src={imageUrl} />\r\n        ) : (\r\n          <Avatar sx={{ width: 32, height: 32, bgcolor: 'primary.main' }}>{fname.charAt(0)}</Avatar>\r\n        )}\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-profile\"\r\n        anchorEl={anchorEl}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'profile-button',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        onClose={() => setAnchorEl(null)}\r\n        keepMounted\r\n      >\r\n        <MenuItem onClick={handleProfileClicked}>Profile</MenuItem>\r\n        <MenuItem onClick={handleLogOut}>Logout</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import { Collapse } from '@mui/material';\r\nimport React from 'react';\r\nimport { TabPanelProps } from './type';\r\n\r\nexport const TabPanel = ({ children, value, index, ...other }: TabPanelProps) => {\r\n  return (\r\n    <Collapse in={value === index} timeout={500}>\r\n      <div role=\"tabpanel\" id={`tabpanel-${index}`} aria-labelledby={`-tab-${index}`} {...other}>\r\n        {value === index && children}\r\n      </div>\r\n    </Collapse>\r\n  );\r\n};\r\n","import { Alert, Slide, Snackbar } from '@mui/material';\r\nimport React from 'react';\r\nimport { SnackbarProps } from './type';\r\n\r\nexport const NotificationSnackbar = ({ open, msg, severity = 'success', handleClose }: SnackbarProps) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      TransitionComponent={(props) => <Slide {...props} direction=\"up\" />}\r\n      sx={{ minWidth: '300px' }}\r\n    >\r\n      <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n        {msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport { repository } from './repository';\r\n\r\nexport type PaginationQuery = {\r\n  page: number;\r\n  per_page: number;\r\n  sort_by: 'created_at' | 'updated_at';\r\n  sort_order: 'asc' | 'desc';\r\n};\r\n\r\nconst defaultQuery: PaginationQuery = {\r\n  page: 1,\r\n  per_page: 10,\r\n  sort_by: 'created_at',\r\n  sort_order: 'desc',\r\n};\r\n\r\nexport class BaseApiService<RequestType, ResponseType> {\r\n  resource: string = '';\r\n  _repository = repository;\r\n\r\n  async get(): Promise<ResponseType[]> {\r\n    return (await this._repository.get(`${this.resource} `)).data;\r\n  }\r\n\r\n  async getWithPagination(query: Partial<PaginationQuery>): Promise<ResponseType[]> {\r\n    return (await this._repository.get(`${this.resource}/${objToQuery({ ...defaultQuery, ...query })}`)).data;\r\n  }\r\n\r\n  async getOne(id: string): Promise<ResponseType> {\r\n    return (await this._repository.get(`${this.resource}/${id}`)).data;\r\n  }\r\n\r\n  async getWithCustomQuery(obj: Object): Promise<ResponseType[]> {\r\n    return (await this._repository.get(`${this.resource}${objToQuery(obj)}`)).data;\r\n  }\r\n\r\n  async create(body: RequestType): Promise<any> {\r\n    return (await this._repository.post(`${this.resource}`, body)).data;\r\n  }\r\n\r\n  async update(id: string, data: RequestType): Promise<any> {\r\n    return (await this._repository.put(`${this.resource}/${id}`, data)).data;\r\n  }\r\n\r\n  async delete(id: string): Promise<any> {\r\n    return (await this._repository.delete(`${this.resource}/${id}`)).data;\r\n  }\r\n\r\n  async customRequest(config: AxiosRequestConfig<any>): Promise<any> {\r\n    return axios(config);\r\n  }\r\n}\r\n\r\n// HElper function\r\nconst objToQuery = (obj: any): string => {\r\n  return new URLSearchParams(obj).toString();\r\n};\r\n"],"sourceRoot":""}